C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\EXPdraft\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFU
                    -ZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/SiliconLabs/SimplicityStudio/v4/develope
                    -r/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8B
                    -B3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(int B) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PBCFG_0_enter_DefaultMode_from_RESET();
  30   1              CLOCK_0_enter_DefaultMode_from_RESET(B);
  31   1              PCA_0_enter_DefaultMode_from_RESET();
  32   1              PCACH_0_enter_DefaultMode_from_RESET();
  33   1              // Restore the SFRPAGE
  34   1              SFRPAGE = SFRPAGE_save;
  35   1              // [Config Calls]$
  36   1      
  37   1      }
  38          
  39          //================================================================================
  40          // WDT_0_enter_DefaultMode_from_RESET
  41          //================================================================================
  42          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  43   1              // $[WDTCN - Watchdog Timer Control]
  44   1              SFRPAGE = 0x00;
  45   1              //Disable Watchdog with key sequence
  46   1              WDTCN = 0xDE; //First key
  47   1              WDTCN = 0xAD; //Second key
  48   1              // [WDTCN - Watchdog Timer Control]$
  49   1      
  50   1      }
  51          
  52          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 2   

  53          // PORTS_0_enter_DefaultMode_from_RESET
  54          //================================================================================
  55          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  56   1              // $[P0 - Port 0 Pin Latch]
  57   1              /*
  58   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  59   1               //     float high.)
  60   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  61   1               //     float high.)
  62   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  63   1               //     float high.)
  64   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
  65   1               //     float high.)
  66   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
  67   1               //     float high.)
  68   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
  69   1               //     float high.)
  70   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
  71   1               //     float high.)
  72   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
  73   1               //     float high.)
  74   1               */
  75   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
  76   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
  77   1              // [P0 - Port 0 Pin Latch]$
  78   1      
  79   1              // $[P0MDOUT - Port 0 Output Mode]
  80   1              /*
  81   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
  82   1               //     drain.)
  83   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  84   1               //     drain.)
  85   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  86   1               //     drain.)
  87   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
  88   1               //     drain.)
  89   1               // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
  90   1               //     drain.)
  91   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  92   1               //     drain.)
  93   1               // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  94   1               //     drain.)
  95   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
  96   1               //     drain.)
  97   1               */
  98   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  99   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 100   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 101   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 102   1              // [P0MDOUT - Port 0 Output Mode]$
 103   1      
 104   1              // $[P0MDIN - Port 0 Input Mode]
 105   1              /*
 106   1               // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
 107   1               //     digital mode.)
 108   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 109   1               //     digital mode.)
 110   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 111   1               //     digital mode.)
 112   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 113   1               //     digital mode.)
 114   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 115   1               //     digital mode.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 3   

 116   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 117   1               //     digital mode.)
 118   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 119   1               //     digital mode.)
 120   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 121   1               //     digital mode.)
 122   1               */
 123   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 124   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 125   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 126   1              // [P0MDIN - Port 0 Input Mode]$
 127   1      
 128   1              // $[P0SKIP - Port 0 Skip]
 129   1              /*
 130   1               // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 131   1               //     crossbar.)
 132   1               // B1 (Port 0 Bit 1 Skip) = SKIPPED (P0.1 pin is skipped by the
 133   1               //     crossbar.)
 134   1               // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
 135   1               //     crossbar.)
 136   1               // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
 137   1               //     crossbar.)
 138   1               // B4 (Port 0 Bit 4 Skip) = SKIPPED (P0.4 pin is skipped by the
 139   1               //     crossbar.)
 140   1               // B5 (Port 0 Bit 5 Skip) = SKIPPED (P0.5 pin is skipped by the
 141   1               //     crossbar.)
 142   1               // B6 (Port 0 Bit 6 Skip) = SKIPPED (P0.6 pin is skipped by the
 143   1               //     crossbar.)
 144   1               // B7 (Port 0 Bit 7 Skip) = SKIPPED (P0.7 pin is skipped by the
 145   1               //     crossbar.)
 146   1               */
 147   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 148   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 149   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 150   1              // [P0SKIP - Port 0 Skip]$
 151   1      
 152   1              // $[P0MASK - Port 0 Mask]
 153   1              /*
 154   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 155   1               //     ignored and will not cause a port mismatch event.)
 156   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 157   1               //     ignored and will not cause a port mismatch event.)
 158   1               // B2 (Port 0 Bit 2 Mask Value) = IGNORED (P0.2 pin logic value is
 159   1               //     ignored and will not cause a port mismatch event.)
 160   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 161   1               //     ignored and will not cause a port mismatch event.)
 162   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 163   1               //     ignored and will not cause a port mismatch event.)
 164   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 165   1               //     ignored and will not cause a port mismatch event.)
 166   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 167   1               //     ignored and will not cause a port mismatch event.)
 168   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 169   1               //     ignored and will not cause a port mismatch event.)
 170   1               */
 171   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
 172   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 173   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 174   1              // [P0MASK - Port 0 Mask]$
 175   1      
 176   1              // $[P0MAT - Port 0 Match]
 177   1              /*
 178   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 4   

 179   1               //     with logic HIGH.)
 180   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 181   1               //     with logic HIGH.)
 182   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 183   1               //     with logic HIGH.)
 184   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 185   1               //     with logic HIGH.)
 186   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 187   1               //     with logic HIGH.)
 188   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 189   1               //     with logic HIGH.)
 190   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 191   1               //     with logic HIGH.)
 192   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 193   1               //     with logic HIGH.)
 194   1               */
 195   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 196   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 197   1              // [P0MAT - Port 0 Match]$
 198   1      
 199   1      }
 200          
 201          //================================================================================
 202          // PORTS_1_enter_DefaultMode_from_RESET
 203          //================================================================================
 204          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 205   1              // $[P1 - Port 1 Pin Latch]
 206   1              /*
 207   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 208   1               //     float high.)
 209   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 210   1               //     float high.)
 211   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 212   1               //     float high.)
 213   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
 214   1               //     float high.)
 215   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
 216   1               //     float high.)
 217   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
 218   1               //     float high.)
 219   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
 220   1               //     float high.)
 221   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
 222   1               //     float high.)
 223   1               */
 224   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 225   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
 226   1              // [P1 - Port 1 Pin Latch]$
 227   1      
 228   1              // $[P1MDOUT - Port 1 Output Mode]
 229   1              /*
 230   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
 231   1               //     drain.)
 232   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 233   1               //     drain.)
 234   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 235   1               //     drain.)
 236   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 237   1               //     drain.)
 238   1               // B4 (Port 1 Bit 4 Output Mode) = PUSH_PULL (P1.4 output is push-pull.)
 239   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 240   1               //     drain.)
 241   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 5   

 242   1               //     drain.)
 243   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 244   1               //     drain.)
 245   1               */
 246   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 247   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 248   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 249   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 250   1              // [P1MDOUT - Port 1 Output Mode]$
 251   1      
 252   1              // $[P1MDIN - Port 1 Input Mode]
 253   1              /*
 254   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 255   1               //     digital mode.)
 256   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 257   1               //     digital mode.)
 258   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 259   1               //     digital mode.)
 260   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 261   1               //     digital mode.)
 262   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 263   1               //     digital mode.)
 264   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 265   1               //     digital mode.)
 266   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 267   1               //     digital mode.)
 268   1               // B7 (Port 1 Bit 7 Input Mode) = DIGITAL (P1.7 pin is configured for
 269   1               //     digital mode.)
 270   1               */
 271   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 272   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 273   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 274   1              // [P1MDIN - Port 1 Input Mode]$
 275   1      
 276   1              // $[P1SKIP - Port 1 Skip]
 277   1              /*
 278   1               // B0 (Port 1 Bit 0 Skip) = SKIPPED (P1.0 pin is skipped by the
 279   1               //     crossbar.)
 280   1               // B1 (Port 1 Bit 1 Skip) = SKIPPED (P1.1 pin is skipped by the
 281   1               //     crossbar.)
 282   1               // B2 (Port 1 Bit 2 Skip) = SKIPPED (P1.2 pin is skipped by the
 283   1               //     crossbar.)
 284   1               // B3 (Port 1 Bit 3 Skip) = SKIPPED (P1.3 pin is skipped by the
 285   1               //     crossbar.)
 286   1               // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 287   1               //     crossbar.)
 288   1               // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 289   1               //     crossbar.)
 290   1               // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 291   1               //     crossbar.)
 292   1               // B7 (Port 1 Bit 7 Skip) = NOT_SKIPPED (P1.7 pin is not skipped by the
 293   1               //     crossbar.)
 294   1               */
 295   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 296   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 297   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 298   1                              | P1SKIP_B7__NOT_SKIPPED;
 299   1              // [P1SKIP - Port 1 Skip]$
 300   1      
 301   1              // $[P1MASK - Port 1 Mask]
 302   1              /*
 303   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 304   1               //     ignored and will not cause a port mismatch event.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 6   

 305   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 306   1               //     ignored and will not cause a port mismatch event.)
 307   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 308   1               //     ignored and will not cause a port mismatch event.)
 309   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 310   1               //     ignored and will not cause a port mismatch event.)
 311   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 312   1               //     ignored and will not cause a port mismatch event.)
 313   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 314   1               //     ignored and will not cause a port mismatch event.)
 315   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 316   1               //     ignored and will not cause a port mismatch event.)
 317   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 318   1               //     ignored and will not cause a port mismatch event.)
 319   1               */
 320   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 321   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 322   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 323   1              // [P1MASK - Port 1 Mask]$
 324   1      
 325   1              // $[P1MAT - Port 1 Match]
 326   1              /*
 327   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 328   1               //     with logic HIGH.)
 329   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 330   1               //     with logic HIGH.)
 331   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 332   1               //     with logic HIGH.)
 333   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 334   1               //     with logic HIGH.)
 335   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 336   1               //     with logic HIGH.)
 337   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 338   1               //     with logic HIGH.)
 339   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 340   1               //     with logic HIGH.)
 341   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 342   1               //     with logic HIGH.)
 343   1               */
 344   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 345   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 346   1              // [P1MAT - Port 1 Match]$
 347   1      
 348   1      }
 349          
 350          //================================================================================
 351          // PBCFG_0_enter_DefaultMode_from_RESET
 352          //================================================================================
 353          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 354   1              // $[XBR2 - Port I/O Crossbar 2]
 355   1              /*
 356   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 357   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 358   1               //     mode).)
 359   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 360   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 361   1               //     pin.)
 362   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 363   1               //     at Port pin.)
 364   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 365   1               //     at Port pin.)
 366   1               */
 367   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 7   

 368   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 369   1                              | XBR2_URT1CTSE__DISABLED;
 370   1              // [XBR2 - Port I/O Crossbar 2]$
 371   1      
 372   1              // $[PRTDRV - Port Drive Strength]
 373   1              // [PRTDRV - Port Drive Strength]$
 374   1      
 375   1              // $[XBR0 - Port I/O Crossbar 0]
 376   1              // [XBR0 - Port I/O Crossbar 0]$
 377   1      
 378   1              // $[XBR1 - Port I/O Crossbar 1]
 379   1              /*
 380   1               // PCA0ME (PCA Module I/O Enable) = CEX0 (CEX0 routed to Port pin.)
 381   1               // ECIE (PCA0 External Counter Input Enable) = DISABLED (ECI unavailable
 382   1               //     at Port pin.)
 383   1               // T0E (T0 Enable) = DISABLED (T0 unavailable at Port pin.)
 384   1               // T1E (T1 Enable) = DISABLED (T1 unavailable at Port pin.)
 385   1               // T2E (T2 Enable) = DISABLED (T2 unavailable at Port pin.)
 386   1               */
 387   1              XBR1 = XBR1_PCA0ME__CEX0 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 388   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 389   1              // [XBR1 - Port I/O Crossbar 1]$
 390   1      
 391   1      }
 392          
 393          //================================================================================
 394          // CLOCK_0_enter_DefaultMode_from_RESET
 395          //================================================================================
 396          extern void CLOCK_0_enter_DefaultMode_from_RESET(int B) {
 397   1              // $[HFOSC1 Setup]
 398   1              // [HFOSC1 Setup]$
 399   1      
 400   1              // $[CLKSEL - Clock Select]
 401   1              /*
 402   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 403   1               //     High Frequency Oscillator 0.)
 404   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 405   1               //     selected clock source divided by 1.)
 406   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 407   1               //     High Frequency Oscillator 0.)
 408   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 409   1               //     selected clock source divided by 1.)
 410   1               */
 411   1              switch(B){
 412   2              case 0:
 413   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 414   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 415   2                      break;
 416   2              case 1:
 417   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_2;
 418   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_2;
 419   2                      break;
 420   2              case 2:
 421   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_4;
 422   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_4;
 423   2                      break;
 424   2              case 3:
 425   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_8;
 426   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_8;
 427   2                      break;
 428   2              case 4:
 429   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_16;
 430   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_16;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 8   

 431   2                      break;
 432   2              case 5:
 433   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_32;
 434   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_32;
 435   2                      break;
 436   2              }
 437   1      
 438   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 439   1                      ;
 440   1              // [CLKSEL - Clock Select]$
 441   1      
 442   1      }
 443          
 444          //================================================================================
 445          // PCA_0_enter_DefaultMode_from_RESET
 446          //================================================================================
 447          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 448   1              // $[PCA Off]
 449   1              PCA0CN0_CR = PCA0CN0_CR__STOP;
 450   1              // [PCA Off]$
 451   1      
 452   1              // $[PCA0MD - PCA Mode]
 453   1              /*
 454   1               // CIDL (PCA Counter/Timer Idle Control) = NORMAL (PCA continues to
 455   1               //     function normally while the system controller is in Idle Mode.)
 456   1               // ECF (PCA Counter/Timer Overflow Interrupt Enable) = OVF_INT_DISABLED
 457   1               //     (Disable the CF interrupt.)
 458   1               // CPS (PCA Counter/Timer Pulse Select) = SYSCLK_DIV_4 (System clock
 459   1               //     divided by 4.)
 460   1               */
 461   1              PCA0MD = PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED
 462   1                              | PCA0MD_CPS__SYSCLK_DIV_4;
 463   1              // [PCA0MD - PCA Mode]$
 464   1      
 465   1              // $[PCA0CENT - PCA Center Alignment Enable]
 466   1              // [PCA0CENT - PCA Center Alignment Enable]$
 467   1      
 468   1              // $[PCA0CLR - PCA Comparator Clear Control]
 469   1              // [PCA0CLR - PCA Comparator Clear Control]$
 470   1      
 471   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 472   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 473   1      
 474   1              // $[PCA0H - PCA Counter/Timer High Byte]
 475   1              // [PCA0H - PCA Counter/Timer High Byte]$
 476   1      
 477   1              // $[PCA0POL - PCA Output Polarity]
 478   1              // [PCA0POL - PCA Output Polarity]$
 479   1      
 480   1              // $[PCA0PWM - PCA PWM Configuration]
 481   1              // [PCA0PWM - PCA PWM Configuration]$
 482   1      
 483   1              // $[PCA On]
 484   1              PCA0CN0_CR = PCA0CN0_CR__RUN;
 485   1              // [PCA On]$
 486   1      
 487   1      }
 488          
 489          //================================================================================
 490          // PCACH_0_enter_DefaultMode_from_RESET
 491          //================================================================================
 492          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 493   1              // $[PCA0 Settings Save]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 15:14:35 PAGE 9   

 494   1              // Select Capture/Compare register)
 495   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 496   1              // [PCA0 Settings Save]$
 497   1      
 498   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 499   1              /*
 500   1               // CAPN (Channel 0 Capture Negative Function Enable) = DISABLED (Disable
 501   1               //     negative edge capture.)
 502   1               // ECCF (Channel 0 Capture/Compare Flag Interrupt Enable) = DISABLED
 503   1               //     (Disable CCF0 interrupts.)
 504   1               // MAT (Channel 0 Match Function Enable) = DISABLED (Disable match
 505   1               //     function.)
 506   1               // PWM16 (Channel 0 16-bit Pulse Width Modulation Enable) = 8_BIT (8 to
 507   1               //     11-bit PWM selected.)
 508   1               // CAPP (Channel 0 Capture Positive Function Enable) = DISABLED (Disable
 509   1               //     positive edge capture.)
 510   1               // ECOM (Channel 0 Comparator Function Enable) = ENABLED (Enable
 511   1               //     comparator function.)
 512   1               // PWM (Channel 0 Pulse Width Modulation Mode Enable) = ENABLED (Enable
 513   1               //     PWM function.)
 514   1               // TOG (Channel 0 Toggle Function Enable) = ENABLED (Enable toggle
 515   1               //     function.)
 516   1               */
 517   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 518   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 519   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 520   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__ENABLED;
 521   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 522   1      
 523   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 524   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 525   1      
 526   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 527   1              /*
 528   1               // PCA0CPH0 (PCA Channel 0 Capture Module High Byte) = 0x3E
 529   1               */
 530   1              PCA0CPH0 = (0x3E << PCA0CPH0_PCA0CPH0__SHIFT);
 531   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 532   1      
 533   1              // $[Auto-reload]
 534   1              // [Auto-reload]$
 535   1      
 536   1              // $[PCA0 Settings Restore]
 537   1              // [PCA0 Settings Restore]$
 538   1      
 539   1      }
 540          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    172    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
