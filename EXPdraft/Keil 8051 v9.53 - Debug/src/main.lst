C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2017 15:14:35 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\EXPdraft\src\main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3)
                    - OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/SiliconLabs/SimplicityStudio/v4/developer/sdks
                    -/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc
                    -) PRINT(.\src\main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\main.OBJ)

line level    source

   1          
   2          //-----------------------------------------------------------------------------
   3          // Includes
   4          //-----------------------------------------------------------------------------
   5          #include <SI_EFM8BB3_Register_Enums.h>
   6          #include "bsp.h"// SFR declarations
   7          #include "bsp_config.h"
   8          
   9          
  10          //-----------------------------------------------------------------------------
  11          // main() Routine
  12          // ----------------------------------------------------------------------------
  13          //
  14          // Note: the software watchdog timer is not disabled by default in this
  15          // example, so a long-running program will reset periodically unless
  16          // the timer is disabled or your program periodically writes to it.
  17          //
  18          // Review the "Watchdog Timer" section under the part family's datasheet
  19          // for details. To find the datasheet, select your part in the
  20          // Simplicity Launcher and click on "Data Sheet".
  21          //
  22          //-----------------------------------------------------------------------------
  23          #include <SI_EFM8BB3_Register_Enums.h>
  24          #include "InitDevice.h"
  25          #include "bsp.h"
  26          
  27          
  28          //-----------------------------------------------------------------------------
  29          // Pin Definitions
  30          //-----------------------------------------------------------------------------
  31          SI_SBIT (DISP_EN, SFR_P3, 4);   // Display Enable
  32          SI_SBIT(LED0, SFR_P1, 4);                  // P1.4 LED0
  33          SI_SBIT(LED1, SFR_P1, 5);                  // P1.5 LED1
  34          SI_SBIT(LED2, SFR_P1, 6);                  // P1.6 LED2
  35          #define DISP_BC_DRIVEN   0             // 0 = Board Controller drives display
  36          #define DISP_EFM8_DRIVEN 1             // 1 = EFM8 drives display
  37          
  38          //-----------------------------------------------------------------------------
  39          // Main Routine
  40          //-----------------------------------------------------------------------------
  41          int C=0;
  42          bool pressed=false;
  43          void main (void)
  44          {
  45   1              /*if (BSP_PB0 == BSP_PB_PRESSED){
  46   1                      C++;
  47   1              }
  48   1              if(C>1){
  49   1                      C=0;
  50   1              } */
  51   1              while(1){
  52   2                      LED0=1;
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2017 15:14:35 PAGE 2   

  53   2                      LED1=0;
  54   2                      LED2=0;
  55   2                      enter_DefaultMode_from_RESET(C);
  56   2      
  57   2                 DISP_EN = DISP_BC_DRIVEN;           // EFM8 does not drive display
  58   2                 while(1){
  59   3                         if ((BSP_PB0 == BSP_PB_PRESSED)==false && (BSP_PB1 == BSP_PB_PRESSED)==false ){
  60   4                                 pressed=false;
  61   4                         }
  62   3      
  63   3      
  64   3                         if (BSP_PB0 == BSP_PB_PRESSED && !pressed ){
  65   4                                      pressed=true;
  66   4                                      C++;
  67   4                                      LED0=0;
  68   4                                      LED1=0;
  69   4                                      LED2=0;
  70   4                                      if(C>5){
  71   5                                              C=0;
  72   5                                      }
  73   4                         break;
  74   4                         }
  75   3                         if (BSP_PB1 == BSP_PB_PRESSED && !pressed ){
  76   4                                 pressed=true;
  77   4                                 C--;
  78   4                                 LED0=0;
  79   4                                 LED1=0;
  80   4                                 LED2=0;
  81   4                                 if(C<0){
  82   5                                         C=5;
  83   5                                 }
  84   4                                 break;
  85   4      
  86   4                         }
  87   3      
  88   3                 }
  89   2      
  90   2              }
  91   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    116    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
