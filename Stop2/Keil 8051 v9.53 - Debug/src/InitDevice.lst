C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\Stop2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY
                    -(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\varou\SimplicityStudio\v4_workspace1\
                    -Stop2\inc;C:\Users\varou\SimplicityStudio\v4_workspace1\Stop2\inc\config;C:\Users\varou\SimplicityStudio\v4_workspace1\S
                    -top2\inc\graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C:
                    -/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/develope
                    -r/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/c
                    -ommon/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm
                    -8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory
                    -_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;C:/Sili
                    -conLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_retargetserial;C:/SiliconLabs/Simplicit
                    -yStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v
                    -4.0.3//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          #include "function_generator.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PORTS_3_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              ADC_0_enter_DefaultMode_from_RESET();
  34   1              DAC_0_enter_DefaultMode_from_RESET();
  35   1              DAC_1_enter_DefaultMode_from_RESET();
  36   1              DACGCF_0_enter_DefaultMode_from_RESET();
  37   1              VREF_0_enter_DefaultMode_from_RESET();
  38   1              CLOCK_0_enter_DefaultMode_from_RESET();
  39   1              TIMER01_0_enter_DefaultMode_from_RESET();
  40   1              TIMER16_3_enter_DefaultMode_from_RESET();
  41   1              TIMER16_4_enter_DefaultMode_from_RESET();
  42   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  43   1              SPI_0_enter_DefaultMode_from_RESET();
  44   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 2   

  45   1              // Restore the SFRPAGE
  46   1              SFRPAGE = SFRPAGE_save;
  47   1              // [Config Calls]$
  48   1      
  49   1      }
  50          
  51          //================================================================================
  52          // WDT_0_enter_DefaultMode_from_RESET
  53          //================================================================================
  54          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  55   1              // $[WDTCN - Watchdog Timer Control]
  56   1              SFRPAGE = 0x00;
  57   1              //Disable Watchdog with key sequence
  58   1              WDTCN = 0xDE; //First key
  59   1              WDTCN = 0xAD; //Second key
  60   1              // [WDTCN - Watchdog Timer Control]$
  61   1      
  62   1      }
  63          
  64          //================================================================================
  65          // PORTS_0_enter_DefaultMode_from_RESET
  66          //================================================================================
  67          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  68   1              // $[P0 - Port 0 Pin Latch]
  69   1              /*
  70   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  71   1               //     float high.)
  72   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  73   1               //     float high.)
  74   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  75   1               //     float high.)
  76   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
  77   1               //     float high.)
  78   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
  79   1               //     float high.)
  80   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
  81   1               //     float high.)
  82   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
  83   1               //     float high.)
  84   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
  85   1               //     float high.)
  86   1               */
  87   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
  88   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
  89   1              // [P0 - Port 0 Pin Latch]$
  90   1      
  91   1              // $[P0MDOUT - Port 0 Output Mode]
  92   1              /*
  93   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
  94   1               //     drain.)
  95   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  96   1               //     drain.)
  97   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  98   1               //     drain.)
  99   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
 100   1               //     drain.)
 101   1               // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
 102   1               //     drain.)
 103   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 104   1               //     drain.)
 105   1               // B6 (Port 0 Bit 6 Output Mode) = PUSH_PULL (P0.6 output is push-pull.)
 106   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 107   1               //     drain.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 3   

 108   1               */
 109   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 110   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 111   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 112   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 113   1              // [P0MDOUT - Port 0 Output Mode]$
 114   1      
 115   1              // $[P0MDIN - Port 0 Input Mode]
 116   1              /*
 117   1               // B0 (Port 0 Bit 0 Input Mode) = ANALOG (P0.0 pin is configured for
 118   1               //     analog mode.)
 119   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 120   1               //     digital mode.)
 121   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 122   1               //     digital mode.)
 123   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 124   1               //     digital mode.)
 125   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 126   1               //     digital mode.)
 127   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 128   1               //     digital mode.)
 129   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 130   1               //     digital mode.)
 131   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 132   1               //     digital mode.)
 133   1               */
 134   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 135   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 136   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 137   1              // [P0MDIN - Port 0 Input Mode]$
 138   1      
 139   1              // $[P0SKIP - Port 0 Skip]
 140   1              /*
 141   1               // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 142   1               //     crossbar.)
 143   1               // B1 (Port 0 Bit 1 Skip) = SKIPPED (P0.1 pin is skipped by the
 144   1               //     crossbar.)
 145   1               // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
 146   1               //     crossbar.)
 147   1               // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
 148   1               //     crossbar.)
 149   1               // B4 (Port 0 Bit 4 Skip) = SKIPPED (P0.4 pin is skipped by the
 150   1               //     crossbar.)
 151   1               // B5 (Port 0 Bit 5 Skip) = SKIPPED (P0.5 pin is skipped by the
 152   1               //     crossbar.)
 153   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 154   1               //     crossbar.)
 155   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 156   1               //     crossbar.)
 157   1               */
 158   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 159   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 160   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 161   1              // [P0SKIP - Port 0 Skip]$
 162   1      
 163   1              // $[P0MASK - Port 0 Mask]
 164   1              /*
 165   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 166   1               //     ignored and will not cause a port mismatch event.)
 167   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 168   1               //     ignored and will not cause a port mismatch event.)
 169   1               // B2 (Port 0 Bit 2 Mask Value) = COMPARED (P0.2 pin logic value is
 170   1               //     compared to P0MAT.2.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 4   

 171   1               // B3 (Port 0 Bit 3 Mask Value) = COMPARED (P0.3 pin logic value is
 172   1               //     compared to P0MAT.3.)
 173   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 174   1               //     ignored and will not cause a port mismatch event.)
 175   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 176   1               //     ignored and will not cause a port mismatch event.)
 177   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 178   1               //     ignored and will not cause a port mismatch event.)
 179   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 180   1               //     ignored and will not cause a port mismatch event.)
 181   1               */
 182   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 183   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 184   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 185   1              // [P0MASK - Port 0 Mask]$
 186   1      
 187   1              // $[P0MAT - Port 0 Match]
 188   1              /*
 189   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 190   1               //     with logic HIGH.)
 191   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 192   1               //     with logic HIGH.)
 193   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 194   1               //     with logic HIGH.)
 195   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 196   1               //     with logic HIGH.)
 197   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 198   1               //     with logic HIGH.)
 199   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 200   1               //     with logic HIGH.)
 201   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 202   1               //     with logic HIGH.)
 203   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 204   1               //     with logic HIGH.)
 205   1               */
 206   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 207   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 208   1              // [P0MAT - Port 0 Match]$
 209   1      
 210   1      }
 211          
 212          //================================================================================
 213          // PORTS_1_enter_DefaultMode_from_RESET
 214          //================================================================================
 215          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 216   1              // $[P1 - Port 1 Pin Latch]
 217   1              /*
 218   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 219   1               //     float high.)
 220   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 221   1               //     float high.)
 222   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 223   1               //     float high.)
 224   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
 225   1               //     float high.)
 226   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
 227   1               //     float high.)
 228   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
 229   1               //     float high.)
 230   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
 231   1               //     float high.)
 232   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
 233   1               //     float high.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 5   

 234   1               */
 235   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 236   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
 237   1              // [P1 - Port 1 Pin Latch]$
 238   1      
 239   1              // $[P1MDOUT - Port 1 Output Mode]
 240   1              /*
 241   1               // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
 242   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 243   1               //     drain.)
 244   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 245   1               //     drain.)
 246   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 247   1               //     drain.)
 248   1               // B4 (Port 1 Bit 4 Output Mode) = PUSH_PULL (P1.4 output is push-pull.)
 249   1               // B5 (Port 1 Bit 5 Output Mode) = PUSH_PULL (P1.5 output is push-pull.)
 250   1               // B6 (Port 1 Bit 6 Output Mode) = PUSH_PULL (P1.6 output is push-pull.)
 251   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 252   1               //     drain.)
 253   1               */
 254   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 255   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 256   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 257   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 258   1              // [P1MDOUT - Port 1 Output Mode]$
 259   1      
 260   1              // $[P1MDIN - Port 1 Input Mode]
 261   1              /*
 262   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 263   1               //     digital mode.)
 264   1               // B1 (Port 1 Bit 1 Input Mode) = ANALOG (P1.1 pin is configured for
 265   1               //     analog mode.)
 266   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 267   1               //     digital mode.)
 268   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 269   1               //     digital mode.)
 270   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 271   1               //     digital mode.)
 272   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 273   1               //     digital mode.)
 274   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 275   1               //     digital mode.)
 276   1               // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
 277   1               //     analog mode.)
 278   1               */
 279   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 280   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 281   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 282   1              // [P1MDIN - Port 1 Input Mode]$
 283   1      
 284   1              // $[P1SKIP - Port 1 Skip]
 285   1              /*
 286   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 287   1               //     crossbar.)
 288   1               // B1 (Port 1 Bit 1 Skip) = SKIPPED (P1.1 pin is skipped by the
 289   1               //     crossbar.)
 290   1               // B2 (Port 1 Bit 2 Skip) = SKIPPED (P1.2 pin is skipped by the
 291   1               //     crossbar.)
 292   1               // B3 (Port 1 Bit 3 Skip) = SKIPPED (P1.3 pin is skipped by the
 293   1               //     crossbar.)
 294   1               // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 295   1               //     crossbar.)
 296   1               // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 6   

 297   1               //     crossbar.)
 298   1               // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 299   1               //     crossbar.)
 300   1               // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 301   1               //     crossbar.)
 302   1               */
 303   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 304   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED
 305   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 306   1                              | P1SKIP_B7__SKIPPED;
 307   1              // [P1SKIP - Port 1 Skip]$
 308   1      
 309   1              // $[P1MASK - Port 1 Mask]
 310   1              /*
 311   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 312   1               //     ignored and will not cause a port mismatch event.)
 313   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 314   1               //     ignored and will not cause a port mismatch event.)
 315   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 316   1               //     ignored and will not cause a port mismatch event.)
 317   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 318   1               //     ignored and will not cause a port mismatch event.)
 319   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 320   1               //     ignored and will not cause a port mismatch event.)
 321   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 322   1               //     ignored and will not cause a port mismatch event.)
 323   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 324   1               //     ignored and will not cause a port mismatch event.)
 325   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 326   1               //     ignored and will not cause a port mismatch event.)
 327   1               */
 328   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 329   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 330   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 331   1              // [P1MASK - Port 1 Mask]$
 332   1      
 333   1              // $[P1MAT - Port 1 Match]
 334   1              /*
 335   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 336   1               //     with logic HIGH.)
 337   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 338   1               //     with logic HIGH.)
 339   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 340   1               //     with logic HIGH.)
 341   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 342   1               //     with logic HIGH.)
 343   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 344   1               //     with logic HIGH.)
 345   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 346   1               //     with logic HIGH.)
 347   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 348   1               //     with logic HIGH.)
 349   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 350   1               //     with logic HIGH.)
 351   1               */
 352   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 353   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 354   1              // [P1MAT - Port 1 Match]$
 355   1      
 356   1      }
 357          
 358          //================================================================================
 359          // PORTS_2_enter_DefaultMode_from_RESET
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 7   

 360          //================================================================================
 361          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 362   1              // $[P2 - Port 2 Pin Latch]
 363   1              // [P2 - Port 2 Pin Latch]$
 364   1      
 365   1              // $[P2MDOUT - Port 2 Output Mode]
 366   1              /*
 367   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 368   1               //     drain.)
 369   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 370   1               //     drain.)
 371   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 372   1               //     drain.)
 373   1               // B3 (Port 2 Bit 3 Output Mode) = OPEN_DRAIN (P2.3 output is open-
 374   1               //     drain.)
 375   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 376   1               //     drain.)
 377   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 378   1               //     drain.)
 379   1               // B6 (Port 2 Bit 6 Output Mode) = PUSH_PULL (P2.6 output is push-pull.)
 380   1               */
 381   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 382   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 383   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 384   1                              | P2MDOUT_B6__PUSH_PULL;
 385   1              // [P2MDOUT - Port 2 Output Mode]$
 386   1      
 387   1              // $[P2MDIN - Port 2 Input Mode]
 388   1              // [P2MDIN - Port 2 Input Mode]$
 389   1      
 390   1              // $[P2SKIP - Port 2 Skip]
 391   1              /*
 392   1               // B0 (Port 2 Bit 0 Skip) = NOT_SKIPPED (P2.0 pin is not skipped by the
 393   1               //     crossbar.)
 394   1               // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
 395   1               //     crossbar.)
 396   1               // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
 397   1               //     crossbar.)
 398   1               // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
 399   1               //     crossbar.)
 400   1               */
 401   1              SFRPAGE = 0x20;
 402   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 403   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 404   1              // [P2SKIP - Port 2 Skip]$
 405   1      
 406   1              // $[P2MASK - Port 2 Mask]
 407   1              // [P2MASK - Port 2 Mask]$
 408   1      
 409   1              // $[P2MAT - Port 2 Match]
 410   1              // [P2MAT - Port 2 Match]$
 411   1      
 412   1      }
 413          
 414          //================================================================================
 415          // PORTS_3_enter_DefaultMode_from_RESET
 416          //================================================================================
 417          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 418   1              // $[P3 - Port 3 Pin Latch]
 419   1              // [P3 - Port 3 Pin Latch]$
 420   1      
 421   1              // $[P3MDOUT - Port 3 Output Mode]
 422   1              // [P3MDOUT - Port 3 Output Mode]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 8   

 423   1      
 424   1              // $[P3MDIN - Port 3 Input Mode]
 425   1              /*
 426   1               // B0 (Port 3 Bit 0 Input Mode) = ANALOG (P3.0 pin is configured for
 427   1               //     analog mode.)
 428   1               // B1 (Port 3 Bit 1 Input Mode) = ANALOG (P3.1 pin is configured for
 429   1               //     analog mode.)
 430   1               // B2 (Port 3 Bit 2 Input Mode) = DIGITAL (P3.2 pin is configured for
 431   1               //     digital mode.)
 432   1               // B3 (Port 3 Bit 3 Input Mode) = DIGITAL (P3.3 pin is configured for
 433   1               //     digital mode.)
 434   1               // B4 (Port 3 Bit 4 Input Mode) = DIGITAL (P3.4 pin is configured for
 435   1               //     digital mode.)
 436   1               // B7 (Port 3 Bit 7 Input Mode) = DIGITAL (P3.7 pin is configured for
 437   1               //     digital mode.)
 438   1               */
 439   1              P3MDIN = P3MDIN_B0__ANALOG | P3MDIN_B1__ANALOG | P3MDIN_B2__DIGITAL
 440   1                              | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B7__DIGITAL;
 441   1              // [P3MDIN - Port 3 Input Mode]$
 442   1      
 443   1      }
 444          
 445          //================================================================================
 446          // PBCFG_0_enter_DefaultMode_from_RESET
 447          //================================================================================
 448          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 449   1              // $[XBR2 - Port I/O Crossbar 2]
 450   1              /*
 451   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 452   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 453   1               //     mode).)
 454   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 455   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 456   1               //     pin.)
 457   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 458   1               //     at Port pin.)
 459   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 460   1               //     at Port pin.)
 461   1               */
 462   1              SFRPAGE = 0x00;
 463   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 464   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 465   1                              | XBR2_URT1CTSE__DISABLED;
 466   1              // [XBR2 - Port I/O Crossbar 2]$
 467   1      
 468   1              // $[PRTDRV - Port Drive Strength]
 469   1              // [PRTDRV - Port Drive Strength]$
 470   1      
 471   1              // $[XBR0 - Port I/O Crossbar 0]
 472   1              /*
 473   1               // URT0E (UART0 I/O Enable) = DISABLED (UART0 I/O unavailable at Port
 474   1               //     pin.)
 475   1               // SPI0E (SPI I/O Enable) = ENABLED (SPI I/O routed to Port pins. The SPI
 476   1               //     can be assigned either 3 or 4 GPIO pins.)
 477   1               // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 478   1               //     pins.)
 479   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 480   1               //     pin.)
 481   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 482   1               //     (Asynchronous CP0 unavailable at Port pin.)
 483   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 484   1               //     pin.)
 485   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 9   

 486   1               //     (Asynchronous CP1 unavailable at Port pin.)
 487   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 488   1               //     pin.)
 489   1               */
 490   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 491   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 492   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 493   1              // [XBR0 - Port I/O Crossbar 0]$
 494   1      
 495   1              // $[XBR1 - Port I/O Crossbar 1]
 496   1              /*
 497   1               // PCA0ME (PCA Module I/O Enable) = CEX0_TO_CEX2 (CEX0, CEX1, CEX2 routed
 498   1               //     to Port pins.)
 499   1               // ECIE (PCA0 External Counter Input Enable) = DISABLED (ECI unavailable
 500   1               //     at Port pin.)
 501   1               // T0E (T0 Enable) = DISABLED (T0 unavailable at Port pin.)
 502   1               // T1E (T1 Enable) = DISABLED (T1 unavailable at Port pin.)
 503   1               // T2E (T2 Enable) = DISABLED (T2 unavailable at Port pin.)
 504   1               */
 505   1              XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 506   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 507   1              // [XBR1 - Port I/O Crossbar 1]$
 508   1      
 509   1      }
 510          
 511          //================================================================================
 512          // ADC_0_enter_DefaultMode_from_RESET
 513          //================================================================================
 514          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 515   1              // $[ADC0CN2 - ADC0 Control 2]
 516   1              // [ADC0CN2 - ADC0 Control 2]$
 517   1      
 518   1              // $[ADC0CN1 - ADC0 Control 1]
 519   1              /*
 520   1               // ADBITS (Resolution Control) = 10_BIT (ADC0 operates in 10-bit mode.)
 521   1               // ADSJST (Accumulator Shift and Justify) = RIGHT_NO_SHIFT (Right
 522   1               //     justified. No shifting applied.)
 523   1               // ADRPT (Repeat Count) = ACC_1 (Perform and Accumulate 1 conversion.)
 524   1               */
 525   1              ADC0CN1 = ADC0CN1_ADBITS__10_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
 526   1                              | ADC0CN1_ADRPT__ACC_1;
 527   1              // [ADC0CN1 - ADC0 Control 1]$
 528   1      
 529   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 530   1              /*
 531   1               // ADC0MX (AMUX0 Positive Input Selection) = ADC0P13 (Select ADC0.13.)
 532   1               */
 533   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 534   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 535   1      
 536   1              // $[ADC0CF2 - ADC0 Power Control]
 537   1              /*
 538   1               // GNDSL (Analog Ground Reference) = GND_PIN (The ADC0 ground reference
 539   1               //     is the GND pin.)
 540   1               // REFSL (Voltage Reference Select) = VDD_PIN (The ADC0 voltage reference
 541   1               //     is the VDD pin.)
 542   1               // ADPWR (Power Up Delay Time) = 0x1F
 543   1               */
 544   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 545   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 546   1              // [ADC0CF2 - ADC0 Power Control]$
 547   1      
 548   1              // $[ADC0CF0 - ADC0 Configuration]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 10  

 549   1              /*
 550   1               // ADCLKSEL (ADC Clock Select) = SYSCLK (ADCCLK = SYSCLK.)
 551   1               // ADSC (SAR Clock Divider) = 0x01
 552   1               */
 553   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 554   1              // [ADC0CF0 - ADC0 Configuration]$
 555   1      
 556   1              // $[ADC0CF1 - ADC0 Configuration]
 557   1              /*
 558   1               // ADLPM (Low Power Mode Enable) = LP_DISABLED (Disable low power
 559   1               //     mode.)
 560   1               // ADTK (Conversion Tracking Time) = 0x01
 561   1               */
 562   1              ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 563   1              // [ADC0CF1 - ADC0 Configuration]$
 564   1      
 565   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 566   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 567   1      
 568   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 569   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 570   1      
 571   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 572   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 573   1      
 574   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 575   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 576   1      
 577   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 578   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 579   1      
 580   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 581   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 582   1      
 583   1              // $[ADC0CN0 - ADC0 Control 0]
 584   1              /*
 585   1               // ADEN (ADC Enable) = ENABLED (Enable ADC0 (active and ready for data
 586   1               //     conversions).)
 587   1               */
 588   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 589   1              // [ADC0CN0 - ADC0 Control 0]$
 590   1      
 591   1      }
 592          
 593          //================================================================================
 594          // DAC_0_enter_DefaultMode_from_RESET
 595          //================================================================================
 596          extern void DAC_0_enter_DefaultMode_from_RESET(void) {
 597   1              // $[DAC0CF0 - DAC0 Configuration 0]
 598   1              /*
 599   1               // EN (DAC0 Enable) = ENABLE (DAC0 is enabled and will drive the output
 600   1               //     pin.)
 601   1               // UPDATE (DAC0 Update Trigger Source) = TIMER4 (DAC0 output updates
 602   1               //     occur on Timer 4 high byte overflow.)
 603   1               // LJST (DAC0 Left Justify Enable) = RIGHT_JUSTIFY (DAC0 input is treated
 604   1               //     as right-justified.)
 605   1               // RSTMD (DAC0 Reset Mode) = NORMAL (All resets will reset DAC0 and its
 606   1               //     associated registers.)
 607   1               */
 608   1              SFRPAGE = 0x30;
 609   1              DAC0CF0 = DAC0CF0_EN__ENABLE | DAC0CF0_UPDATE__TIMER4
 610   1                              | DAC0CF0_LJST__RIGHT_JUSTIFY | DAC0CF0_RSTMD__NORMAL;
 611   1              // [DAC0CF0 - DAC0 Configuration 0]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 11  

 612   1      
 613   1              // $[DAC0CF1 - DAC0 Configuration 1]
 614   1              // [DAC0CF1 - DAC0 Configuration 1]$
 615   1      
 616   1      }
 617          
 618          //================================================================================
 619          // DAC_1_enter_DefaultMode_from_RESET
 620          //================================================================================
 621          extern void DAC_1_enter_DefaultMode_from_RESET(void) {
 622   1              // $[DAC1CF0 - DAC1 Configuration 0]
 623   1              /*
 624   1               // EN (DAC1 Enable) = ENABLE (DAC1 is enabled and will drive the output
 625   1               //     pin.)
 626   1               // UPDATE (DAC1 Update Trigger Source) = TIMER4 (DAC1 output updates
 627   1               //     occur on Timer 4 high byte overflow.)
 628   1               // LJST (DAC1 Left Justify Enable) = RIGHT_JUSTIFY (DAC1 input is treated
 629   1               //     as right-justified.)
 630   1               // RSTMD (DAC1 Reset Mode) = NORMAL (All resets will reset DAC1 and its
 631   1               //     associated registers.)
 632   1               */
 633   1              DAC1CF0 = DAC1CF0_EN__ENABLE | DAC1CF0_UPDATE__TIMER4
 634   1                              | DAC1CF0_LJST__RIGHT_JUSTIFY | DAC1CF0_RSTMD__NORMAL;
 635   1              // [DAC1CF0 - DAC1 Configuration 0]$
 636   1      
 637   1              // $[DAC1CF1 - DAC1 Configuration 1]
 638   1              // [DAC1CF1 - DAC1 Configuration 1]$
 639   1      
 640   1      }
 641          
 642          //================================================================================
 643          // DACGCF_0_enter_DefaultMode_from_RESET
 644          //================================================================================
 645          extern void DACGCF_0_enter_DefaultMode_from_RESET(void) {
 646   1              // $[DACGCF0 - DAC Global Configuration 0]
 647   1              /*
 648   1               // D01REFSL (DAC0 and DAC1 Reference Voltage Select) = VREF (Select the
 649   1               //     VREF pin.)
 650   1               // D1SRC (DAC1 Data Source) = DAC1 (Input = DAC1H:DAC1L.)
 651   1               // D1AMEN (DAC1 Alternating Mode Enable) = NORMAL (DAC1 always updates
 652   1               //     from the data source selected in D1SRC. This mode may be used with any
 653   1               //     trigger source.)
 654   1               */
 655   1              DACGCF0 = DACGCF0_D01REFSL__VREF | DACGCF0_D1SRC__DAC1
 656   1                              | DACGCF0_D1AMEN__NORMAL;
 657   1              // [DACGCF0 - DAC Global Configuration 0]$
 658   1      
 659   1              // $[DACGCF2 - DAC Global Configuration 2]
 660   1              // [DACGCF2 - DAC Global Configuration 2]$
 661   1      
 662   1      }
 663          
 664          //================================================================================
 665          // VREF_0_enter_DefaultMode_from_RESET
 666          //================================================================================
 667          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 668   1              // $[REF0CN - Voltage Reference Control]
 669   1              /*
 670   1               // VREFSL (Voltage Reference Output Select) = VREF_2P4 (2.4 V reference
 671   1               //     output to VREF pin.)
 672   1               */
 673   1              SFRPAGE = 0x00;
 674   1              REF0CN = REF0CN_VREFSL__VREF_2P4;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 12  

 675   1              // [REF0CN - Voltage Reference Control]$
 676   1      
 677   1      }
 678          
 679          //================================================================================
 680          // CLOCK_0_enter_DefaultMode_from_RESET
 681          //================================================================================
 682          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 683   1              // $[HFOSC1 Setup]
 684   1              // [HFOSC1 Setup]$
 685   1      
 686   1              // $[CLKSEL - Clock Select]
 687   1              /*
 688   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 689   1               //     High Frequency Oscillator 0.)
 690   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 691   1               //     selected clock source divided by 1.)
 692   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 693   1               //     High Frequency Oscillator 0.)
 694   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 695   1               //     selected clock source divided by 1.)
 696   1               */
 697   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_16;
 698   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_16;
 699   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 700   1                      ;
 701   1              // [CLKSEL - Clock Select]$
 702   1      
 703   1      }
 704          
 705          //================================================================================
 706          // TIMER01_0_enter_DefaultMode_from_RESET
 707          //================================================================================
 708          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 709   1              // $[Timer Initialization]
 710   1              //Save Timer Configuration
 711   1              uint8_t TCON_save;
 712   1              TCON_save = TCON;
 713   1              //Stop Timers
 714   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 715   1      
 716   1              // [Timer Initialization]$
 717   1      
 718   1              // $[TH0 - Timer 0 High Byte]
 719   1              /*
 720   1               // TH0 (Timer 0 High Byte) = 0x01
 721   1               */
 722   1              TH0 = (0x01 << TH0_TH0__SHIFT);
 723   1              // [TH0 - Timer 0 High Byte]$
 724   1      
 725   1              // $[TL0 - Timer 0 Low Byte]
 726   1              // [TL0 - Timer 0 Low Byte]$
 727   1      
 728   1              // $[TH1 - Timer 1 High Byte]
 729   1              // [TH1 - Timer 1 High Byte]$
 730   1      
 731   1              // $[TL1 - Timer 1 Low Byte]
 732   1              // [TL1 - Timer 1 Low Byte]$
 733   1      
 734   1              // $[Timer Restoration]
 735   1              //Restore Timer Configuration
 736   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 737   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 13  

 738   1              // [Timer Restoration]$
 739   1      
 740   1      }
 741          
 742          //================================================================================
 743          // TIMER16_3_enter_DefaultMode_from_RESET
 744          //================================================================================
 745          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 746   1              // $[Timer Initialization]
 747   1              // Save Timer Configuration
 748   1              uint8_t TMR3CN0_TR3_save;
 749   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 750   1              // Stop Timer
 751   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 752   1              // [Timer Initialization]$
 753   1      
 754   1              // $[TMR3CN1 - Timer 3 Control 1]
 755   1              // [TMR3CN1 - Timer 3 Control 1]$
 756   1      
 757   1              // $[TMR3CN0 - Timer 3 Control]
 758   1              // [TMR3CN0 - Timer 3 Control]$
 759   1      
 760   1              // $[TMR3H - Timer 3 High Byte]
 761   1              /*
 762   1               // TMR3H (Timer 3 High Byte) = 0xF8
 763   1               */
 764   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 765   1              // [TMR3H - Timer 3 High Byte]$
 766   1      
 767   1              // $[TMR3L - Timer 3 Low Byte]
 768   1              /*
 769   1               // TMR3L (Timer 3 Low Byte) = 0x06
 770   1               */
 771   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 772   1              // [TMR3L - Timer 3 Low Byte]$
 773   1      
 774   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 775   1              /*
 776   1               // TMR3RLH (Timer 3 Reload High Byte) = 0xF8
 777   1               */
 778   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 779   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 780   1      
 781   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 782   1              /*
 783   1               // TMR3RLL (Timer 3 Reload Low Byte) = 0x06
 784   1               */
 785   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 786   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 787   1      
 788   1              // $[TMR3CN0]
 789   1              /*
 790   1               // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
 791   1               */
 792   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 793   1              // [TMR3CN0]$
 794   1      
 795   1              // $[Timer Restoration]
 796   1              // Restore Timer Configuration
 797   1              TMR3CN0 |= TMR3CN0_TR3_save;
 798   1              // [Timer Restoration]$
 799   1      
 800   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 14  

 801          
 802          //================================================================================
 803          // TIMER16_4_enter_DefaultMode_from_RESET
 804          //================================================================================
 805          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 806   1              // $[Timer Initialization]
 807   1              // Save Timer Configuration
 808   1              uint8_t TMR4CN0_TR4_save;
 809   1              SFRPAGE = 0x10;
 810   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 811   1              // Stop Timer
 812   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 813   1              // [Timer Initialization]$
 814   1      
 815   1              // $[TMR4CN1 - Timer 4 Control 1]
 816   1              // [TMR4CN1 - Timer 4 Control 1]$
 817   1      
 818   1              // $[TMR4CN0 - Timer 4 Control]
 819   1              // [TMR4CN0 - Timer 4 Control]$
 820   1      
 821   1              // $[TMR4H - Timer 4 High Byte]
 822   1              /*
 823   1               // TMR4H (Timer 4 High Byte) = 0xFF
 824   1               */
 825   1              TMR4H = (0xFF << TMR4H_TMR4H__SHIFT);
 826   1              // [TMR4H - Timer 4 High Byte]$
 827   1      
 828   1              // $[TMR4L - Timer 4 Low Byte]
 829   1              /*
 830   1               // TMR4L (Timer 4 Low Byte) = 0xFF
 831   1               */
 832   1              TMR4L = (0xFF << TMR4L_TMR4L__SHIFT);
 833   1              // [TMR4L - Timer 4 Low Byte]$
 834   1      
 835   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 836   1              /*
 837   1               // TMR4RLH (Timer 4 Reload High Byte) = 0xFF
 838   1               */
 839   1              TMR4RLH = (0xFE << TMR4RLH_TMR4RLH__SHIFT);
 840   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 841   1      
 842   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 843   1              /*
 844   1               // TMR4RLL (Timer 4 Reload Low Byte) = 0x5D
 845   1               */
 846   1              TMR4RLL = (0x68 << TMR4RLL_TMR4RLL__SHIFT);
 847   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 848   1      
 849   1        TMR4RL = (uint16_t)(-SYSCLK / SAMPLE_RATE_DAC);
 850   1              // $[TMR4CN0]
 851   1              /*
 852   1               // TR4 (Timer 4 Run Control) = RUN (Start Timer 4 running.)
 853   1               */
 854   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 855   1              // [TMR4CN0]$
 856   1      
 857   1              // $[Timer Restoration]
 858   1              // Restore Timer Configuration
 859   1              TMR4CN0 |= TMR4CN0_TR4_save;
 860   1              // [Timer Restoration]$
 861   1      
 862   1      }
 863          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 15  

 864          //================================================================================
 865          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 866          //================================================================================
 867          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 868   1              // $[CKCON0 - Clock Control 0]
 869   1              /*
 870   1               // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_48 (System clock divided by 48.)
 871   1               // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 872   1               //     defined by the prescale field, SCA.)
 873   1               // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 874   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 875   1               // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 876   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 877   1               // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 878   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 879   1               // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 880   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 881   1               // T1M (Timer 1 Clock Select) = PRESCALE (Timer 1 uses the clock defined
 882   1               //     by the prescale field, SCA.)
 883   1               */
 884   1              SFRPAGE = 0x00;
 885   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 886   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 887   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 888   1                              | CKCON0_T1M__PRESCALE;
 889   1              // [CKCON0 - Clock Control 0]$
 890   1      
 891   1              // $[CKCON1 - Clock Control 1]
 892   1              /*
 893   1               // T4MH (Timer 4 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 4 high
 894   1               //     byte uses the clock defined by T4XCLK in TMR4CN0.)
 895   1               // T4ML (Timer 4 Low Byte Clock Select) = SYSCLK (Timer 4 low byte uses
 896   1               //     the system clock.)
 897   1               // T5MH (Timer 5 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 5 high
 898   1               //     byte uses the clock defined by T5XCLK in TMR5CN0.)
 899   1               // T5ML (Timer 5 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 5 low
 900   1               //     byte uses the clock defined by T5XCLK in TMR5CN0.)
 901   1               */
 902   1              SFRPAGE = 0x10;
 903   1              CKCON1 = CKCON1_T4MH__EXTERNAL_CLOCK | CKCON1_T4ML__SYSCLK
 904   1                              | CKCON1_T5MH__EXTERNAL_CLOCK | CKCON1_T5ML__EXTERNAL_CLOCK;
 905   1              // [CKCON1 - Clock Control 1]$
 906   1      
 907   1              // $[TMOD - Timer 0/1 Mode]
 908   1              /*
 909   1               // T0M (Timer 0 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 910   1               //     Auto-Reload)
 911   1               // T1M (Timer 1 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 912   1               // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 913   1               //     on the clock defined by T0M in the CKCON0 register.)
 914   1               // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 915   1               //     irrespective of INT0 logic level.)
 916   1               // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 917   1               //     on the clock defined by T1M in the CKCON0 register.)
 918   1               // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 919   1               //     irrespective of INT1 logic level.)
 920   1               */
 921   1              SFRPAGE = 0x00;
 922   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 923   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 924   1              // [TMOD - Timer 0/1 Mode]$
 925   1      
 926   1              // $[TCON - Timer 0/1 Control]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 16  

 927   1              /*
 928   1               // TR0 (Timer 0 Run Control) = RUN (Start Timer 0 running.)
 929   1               */
 930   1              TCON |= TCON_TR0__RUN;
 931   1              // [TCON - Timer 0/1 Control]$
 932   1      
 933   1      }
 934          
 935          //================================================================================
 936          // SPI_0_enter_DefaultMode_from_RESET
 937          //================================================================================
 938          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 939   1              // $[SPI0CKR - SPI0 Clock Rate]
 940   1              /*
 941   1               // SPI0CKR (SPI0 Clock Rate) = 0x0B
 942   1               */
 943   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 944   1              // [SPI0CKR - SPI0 Clock Rate]$
 945   1      
 946   1              // $[SPI0CFG - SPI0 Configuration]
 947   1              /*
 948   1               // MSTEN (Master Mode Enable) = MASTER_ENABLED (Enable master mode.
 949   1               //     Operate as a master.)
 950   1               */
 951   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 952   1              // [SPI0CFG - SPI0 Configuration]$
 953   1      
 954   1              // $[SPI0PCF - SPI0 Pin Configuration]
 955   1              // [SPI0PCF - SPI0 Pin Configuration]$
 956   1      
 957   1              // $[SPI0CN0 - SPI0 Control]
 958   1              /*
 959   1               // SPIEN (SPI0 Enable) = ENABLED (Enable the SPI module.)
 960   1               // NSSMD (Slave Select Mode) = 3_WIRE (3-Wire Slave or 3-Wire Master
 961   1               //     Mode. NSS signal is not routed to a port pin.)
 962   1               */
 963   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 964   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 965   1              // [SPI0CN0 - SPI0 Control]$
 966   1      
 967   1      }
 968          
 969          //================================================================================
 970          // INTERRUPT_0_enter_DefaultMode_from_RESET
 971          //================================================================================
 972          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 973   1              // $[EIE1 - Extended Interrupt Enable 1]
 974   1              /*
 975   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 976   1               //     ADC0 Conversion Complete interrupt.)
 977   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 978   1               //     ADC0 Window Comparison interrupt.)
 979   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 980   1               //     interrupts.)
 981   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 982   1               //     interrupts.)
 983   1               // EMAT (Port Match Interrupts Enable) = ENABLED (Enable interrupt
 984   1               //     requests generated by a Port Match.)
 985   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 986   1               //     (Disable all PCA0 interrupts.)
 987   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 988   1               //     interrupts.)
 989   1               // ET3 (Timer 3 Interrupt Enable) = ENABLED (Enable interrupt requests
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 17  

 990   1               //     generated by the TF3L or TF3H flags.)
 991   1               */
 992   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 993   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 994   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 995   1              // [EIE1 - Extended Interrupt Enable 1]$
 996   1      
 997   1              // $[EIE2 - Extended Interrupt Enable 2]
 998   1              /*
 999   1               // CL0 (Configurable Logic (CL0) Interrupt Enable) = DISABLED (Disable
1000   1               //     CL0 interrupts.)
1001   1               // EI2C0 (I2C0 Slave Interrupt Enable) = DISABLED (Disable all I2C0 slave
1002   1               //     interrupts.)
1003   1               // ET4 (Timer 4 Interrupt Enable) = ENABLED (Enable interrupt requests
1004   1               //     generated by the TF4L or TF4H flags.)
1005   1               // ET5 (Timer 5 Interrupt Enable) = DISABLED (Disable Timer 5
1006   1               //     interrupts.)
1007   1               // ES1 (UART1 Interrupt Enable) = DISABLED (Disable UART1 interrupts.)
1008   1               */
1009   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__DISABLED | EIE2_ET4__ENABLED
1010   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
1011   1              // [EIE2 - Extended Interrupt Enable 2]$
1012   1      
1013   1              // $[EIP1H - Extended Interrupt Priority 1 High]
1014   1              /*
1015   1               // PHADC0 (ADC0 Conversion Complete Interrupt Priority Control MSB) = LOW
1016   1               //     (ADC0 Conversion Complete interrupt priority MSB set to low.)
1017   1               // PHWADC0 (ADC0 Window Comparator Interrupt Priority Control MSB) = LOW
1018   1               //     (ADC0 Window interrupt priority MSB set to low.)
1019   1               // PHCP0 (Comparator0 (CP0) Interrupt Priority Control MSB) = LOW (CP0
1020   1               //     interrupt priority MSB set to low.)
1021   1               // PHCP1 (Comparator1 (CP1) Interrupt Priority Control MSB) = LOW (CP1
1022   1               //     interrupt priority MSB set to low.)
1023   1               // PHMAT (Port Match Interrupt Priority Control MSB) = HIGH (Port Match
1024   1               //     interrupt priority MSB set to high.)
1025   1               // PHPCA0 (Programmable Counter Array (PCA0) Interrupt Priority Control
1026   1               //     MSB) = LOW (PCA0 interrupt priority MSB set to low.)
1027   1               // PHSMB0 (SMBus (SMB0) Interrupt Priority Control MSB) = LOW (SMB0
1028   1               //     interrupt priority MSB set to low.)
1029   1               // PHT3 (Timer 3 Interrupt Priority Control MSB) = HIGH (Timer 3
1030   1               //     interrupt priority MSB set to high.)
1031   1               */
1032   1              SFRPAGE = 0x10;
1033   1              EIP1H = EIP1H_PHADC0__LOW | EIP1H_PHWADC0__LOW | EIP1H_PHCP0__LOW
1034   1                              | EIP1H_PHCP1__LOW | EIP1H_PHMAT__HIGH | EIP1H_PHPCA0__LOW
1035   1                              | EIP1H_PHSMB0__LOW | EIP1H_PHT3__HIGH;
1036   1              // [EIP1H - Extended Interrupt Priority 1 High]$
1037   1      
1038   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
1039   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
1040   1      
1041   1              // $[EIP2 - Extended Interrupt Priority 2]
1042   1              /*
1043   1               // PCL0 (Configurable Logic (CL0) Interrupt Priority Control LSB) = LOW
1044   1               //     (CL0 interrupt priority LSB set to low.)
1045   1               // PI2C0 (I2C0 Slave Interrupt Priority Control LSB) = LOW (I2C0 Slave
1046   1               //     interrupt priority LSB set to low.)
1047   1               // PT4 (Timer 4 Interrupt Priority Control LSB) = HIGH (Timer 4 interrupt
1048   1               //     priority LSB set to high.)
1049   1               // PT5 (Timer 5 Interrupt Priority Control LSB) = LOW (Timer 5 interrupt
1050   1               //     priority LSB set to low.)
1051   1               // PS1 (UART1 Interrupt Priority Control LSB) = LOW (UART1 interrupt
1052   1               //     priority LSB set to low.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/10/2017 16:37:57 PAGE 18  

1053   1               */
1054   1              EIP2 = EIP2_PCL0__LOW | EIP2_PI2C0__LOW | EIP2_PT4__HIGH | EIP2_PT5__LOW
1055   1                              | EIP2_PS1__LOW;
1056   1              // [EIP2 - Extended Interrupt Priority 2]$
1057   1      
1058   1              // $[EIP2H - Extended Interrupt Priority 2 High]
1059   1              // [EIP2H - Extended Interrupt Priority 2 High]$
1060   1      
1061   1              // $[IE - Interrupt Enable]
1062   1              /*
1063   1               // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
1064   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
1065   1               //     interrupt 0.)
1066   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
1067   1               //     interrupt 1.)
1068   1               // ESPI0 (SPI0 Interrupt Enable) = ENABLED (Enable interrupt requests
1069   1               //     generated by SPI0.)
1070   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
1071   1               //     interrupt.)
1072   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
1073   1               //     interrupt.)
1074   1               // ET2 (Timer 2 Interrupt Enable) = ENABLED (Enable interrupt requests
1075   1               //     generated by the TF2L or TF2H flags.)
1076   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
1077   1               */
1078   1              SFRPAGE = 0x00;
1079   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
1080   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
1081   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
1082   1              // [IE - Interrupt Enable]$
1083   1      
1084   1              // $[IP - Interrupt Priority]
1085   1              // [IP - Interrupt Priority]$
1086   1      
1087   1              // $[IPH - Interrupt Priority High]
1088   1              // [IPH - Interrupt Priority High]$
1089   1      
1090   1      }
1091          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
