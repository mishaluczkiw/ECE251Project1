C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\BBB\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3
                    -) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\varou\SimplicityStudio\v4_workspace1\BB
                    -B\inc\graphics;C:\Users\varou\SimplicityStudio\v4_workspace1\BBB\inc;C:\Users\varou\SimplicityStudio\v4_workspace1\BBB\i
                    -nc\config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio
                    -/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4
                    -.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/dr
                    -ivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory
                    -_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc
                    -/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/Simplicit
                    -yStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65
                    -) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PORTS_3_enter_DefaultMode_from_RESET();
  31   1              PBCFG_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER16_3_enter_DefaultMode_from_RESET();
  34   1              TIMER16_4_enter_DefaultMode_from_RESET();
  35   1              SPI_0_enter_DefaultMode_from_RESET();
  36   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  37   1              // Restore the SFRPAGE
  38   1              SFRPAGE = SFRPAGE_save;
  39   1              // [Config Calls]$
  40   1      
  41   1      }
  42          
  43          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  44   1              // $[WDTCN - Watchdog Timer Control]
  45   1              SFRPAGE = 0x00;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 2   

  46   1              //Disable Watchdog with key sequence
  47   1              WDTCN = 0xDE; //First key
  48   1              WDTCN = 0xAD; //Second key
  49   1              // [WDTCN - Watchdog Timer Control]$
  50   1      
  51   1      }
  52          
  53          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
  54   1              // $[HFOSC1 Setup]
  55   1              // [HFOSC1 Setup]$
  56   1      
  57   1              // $[CLKSEL - Clock Select]
  58   1              /***********************************************************************
  59   1               - Clock derived from the Internal High Frequency Oscillator 0
  60   1               - SYSCLK is equal to selected clock source divided by 1
  61   1               ***********************************************************************/
  62   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  63   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
  64   1                      ;
  65   1              // [CLKSEL - Clock Select]$
  66   1      
  67   1      }
  68          
  69          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
  70   1              // $[SPI0CKR - SPI0 Clock Rate]
  71   1              /***********************************************************************
  72   1               - SPI0 Clock Rate = 0x0B
  73   1               ***********************************************************************/
  74   1              SFRPAGE = 0x00;
  75   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
  76   1              // [SPI0CKR - SPI0 Clock Rate]$
  77   1      
  78   1              // $[SPI0CFG - SPI0 Configuration]
  79   1              /***********************************************************************
  80   1               - Enable master mode. Operate as a master
  81   1               ***********************************************************************/
  82   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
  83   1              // [SPI0CFG - SPI0 Configuration]$
  84   1      
  85   1              // $[SPI0PCF - SPI0 Pin Configuration]
  86   1              // [SPI0PCF - SPI0 Pin Configuration]$
  87   1      
  88   1              // $[SPI0CN0 - SPI0 Control]
  89   1              /***********************************************************************
  90   1               - Enable the SPI module
  91   1               - 3-Wire Slave or 3-Wire Master Mode
  92   1               ***********************************************************************/
  93   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
  94   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
  95   1              // [SPI0CN0 - SPI0 Control]$
  96   1      
  97   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
  98   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
  99   1      
 100   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 101   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 102   1      
 103   1      }
 104          
 105          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 106   1              // $[EIE1 - Extended Interrupt Enable 1]
 107   1              /***********************************************************************
 108   1               - Disable ADC0 Conversion Complete interrupt
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 3   

 109   1               - Disable ADC0 Window Comparison interrupt
 110   1               - Disable CP0 interrupts
 111   1               - Disable CP1 interrupts
 112   1               - Enable interrupt requests generated by a Port Match
 113   1               - Disable all PCA0 interrupts
 114   1               - Disable all SMB0 interrupts
 115   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 116   1               ***********************************************************************/
 117   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 118   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 119   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 120   1              // [EIE1 - Extended Interrupt Enable 1]$
 121   1      
 122   1              // $[EIE2 - Extended Interrupt Enable 2]
 123   1              /***********************************************************************
 124   1               - Disable CL0 interrupts
 125   1               - Disable all I2C0 slave interrupts
 126   1               - Enable interrupt requests generated by the TF4L or TF4H flags
 127   1               - Disable Timer 5 interrupts
 128   1               - Disable UART1 interrupts
 129   1               ***********************************************************************/
 130   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__DISABLED | EIE2_ET4__ENABLED
 131   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 132   1              // [EIE2 - Extended Interrupt Enable 2]$
 133   1      
 134   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 135   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 136   1      
 137   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 138   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 139   1      
 140   1              // $[EIP2 - Extended Interrupt Priority 2]
 141   1              // [EIP2 - Extended Interrupt Priority 2]$
 142   1      
 143   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 144   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 145   1      
 146   1              // $[IE - Interrupt Enable]
 147   1              /***********************************************************************
 148   1               - Enable each interrupt according to its individual mask setting
 149   1               - Disable external interrupt 0
 150   1               - Disable external interrupt 1
 151   1               - Enable interrupt requests generated by SPI0
 152   1               - Disable all Timer 0 interrupt
 153   1               - Disable all Timer 1 interrupt
 154   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 155   1               - Disable UART0 interrupt
 156   1               ***********************************************************************/
 157   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 158   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 159   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 160   1              // [IE - Interrupt Enable]$
 161   1      
 162   1              // $[IP - Interrupt Priority]
 163   1              // [IP - Interrupt Priority]$
 164   1      
 165   1              // $[IPH - Interrupt Priority High]
 166   1              // [IPH - Interrupt Priority High]$
 167   1      
 168   1      }
 169          
 170          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 171   1              // $[XBR2 - Port I/O Crossbar 2]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 4   

 172   1              /***********************************************************************
 173   1               - Weak Pullups enabled 
 174   1               - Crossbar enabled
 175   1               - UART1 I/O unavailable at Port pin
 176   1               - UART1 RTS1 unavailable at Port pin
 177   1               - UART1 CTS1 unavailable at Port pin
 178   1               ***********************************************************************/
 179   1              SFRPAGE = 0x00;
 180   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 181   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 182   1                              | XBR2_URT1CTSE__DISABLED;
 183   1              // [XBR2 - Port I/O Crossbar 2]$
 184   1      
 185   1              // $[PRTDRV - Port Drive Strength]
 186   1              // [PRTDRV - Port Drive Strength]$
 187   1      
 188   1              // $[XBR0 - Port I/O Crossbar 0]
 189   1              /***********************************************************************
 190   1               - UART0 I/O unavailable at Port pin
 191   1               - SPI I/O routed to Port pins
 192   1               - SMBus 0 I/O unavailable at Port pins
 193   1               - CP0 unavailable at Port pin
 194   1               - Asynchronous CP0 unavailable at Port pin
 195   1               - CP1 unavailable at Port pin
 196   1               - Asynchronous CP1 unavailable at Port pin
 197   1               - SYSCLK unavailable at Port pin
 198   1               ***********************************************************************/
 199   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 200   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 201   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 202   1              // [XBR0 - Port I/O Crossbar 0]$
 203   1      
 204   1              // $[XBR1 - Port I/O Crossbar 1]
 205   1              // [XBR1 - Port I/O Crossbar 1]$
 206   1      
 207   1      }
 208          
 209          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 210   1              // $[Timer Initialization]
 211   1              // Save Timer Configuration
 212   1              uint8_t TMR3CN0_TR3_save;
 213   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 214   1              // Stop Timer
 215   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 216   1              // [Timer Initialization]$
 217   1      
 218   1              // $[TMR3CN1 - Timer 3 Control 1]
 219   1              // [TMR3CN1 - Timer 3 Control 1]$
 220   1      
 221   1              // $[TMR3CN0 - Timer 3 Control]
 222   1              // [TMR3CN0 - Timer 3 Control]$
 223   1      
 224   1              // $[TMR3H - Timer 3 High Byte]
 225   1              /***********************************************************************
 226   1               - Timer 3 High Byte = 0xF8
 227   1               ***********************************************************************/
 228   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 229   1              // [TMR3H - Timer 3 High Byte]$
 230   1      
 231   1              // $[TMR3L - Timer 3 Low Byte]
 232   1              /***********************************************************************
 233   1               - Timer 3 Low Byte = 0x06
 234   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 5   

 235   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 236   1              // [TMR3L - Timer 3 Low Byte]$
 237   1      
 238   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 239   1              /***********************************************************************
 240   1               - Timer 3 Reload High Byte = 0xF8
 241   1               ***********************************************************************/
 242   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 243   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 244   1      
 245   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 246   1              /***********************************************************************
 247   1               - Timer 3 Reload Low Byte = 0x06
 248   1               ***********************************************************************/
 249   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 250   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 251   1      
 252   1              // $[TMR3CN0]
 253   1              /***********************************************************************
 254   1               - Start Timer 3 running
 255   1               ***********************************************************************/
 256   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 257   1              // [TMR3CN0]$
 258   1      
 259   1              // $[Timer Restoration]
 260   1              // Restore Timer Configuration
 261   1              TMR3CN0 |= TMR3CN0_TR3_save;
 262   1              // [Timer Restoration]$
 263   1      
 264   1      }
 265          
 266          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 267   1              // $[P0 - Port 0 Pin Latch]
 268   1              // [P0 - Port 0 Pin Latch]$
 269   1      
 270   1              // $[P0MDOUT - Port 0 Output Mode]
 271   1              /***********************************************************************
 272   1               - P0.0 output is open-drain
 273   1               - P0.1 output is open-drain
 274   1               - P0.2 output is open-drain
 275   1               - P0.3 output is open-drain
 276   1               - P0.4 output is open-drain
 277   1               - P0.5 output is open-drain
 278   1               - P0.6 output is push-pull
 279   1               - P0.7 output is open-drain
 280   1               ***********************************************************************/
 281   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 282   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 283   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 284   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 285   1              // [P0MDOUT - Port 0 Output Mode]$
 286   1      
 287   1              // $[P0MDIN - Port 0 Input Mode]
 288   1              // [P0MDIN - Port 0 Input Mode]$
 289   1      
 290   1              // $[P0SKIP - Port 0 Skip]
 291   1              /***********************************************************************
 292   1               - P0.0 pin is skipped by the crossbar
 293   1               - P0.1 pin is skipped by the crossbar
 294   1               - P0.2 pin is skipped by the crossbar
 295   1               - P0.3 pin is skipped by the crossbar
 296   1               - P0.4 pin is skipped by the crossbar
 297   1               - P0.5 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 6   

 298   1               - P0.6 pin is not skipped by the crossbar
 299   1               - P0.7 pin is not skipped by the crossbar
 300   1               ***********************************************************************/
 301   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 302   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 303   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 304   1              // [P0SKIP - Port 0 Skip]$
 305   1      
 306   1              // $[P0MASK - Port 0 Mask]
 307   1              /***********************************************************************
 308   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 309   1               event
 310   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 311   1               event
 312   1               - P0.2 pin logic value is compared to P0MAT.2
 313   1               - P0.3 pin logic value is ignored and will not cause a port mismatch
 314   1               event
 315   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 316   1               event
 317   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 318   1               event
 319   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 320   1               event
 321   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 322   1               event
 323   1               ***********************************************************************/
 324   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 325   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 326   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 327   1              // [P0MASK - Port 0 Mask]$
 328   1      
 329   1              // $[P0MAT - Port 0 Match]
 330   1              // [P0MAT - Port 0 Match]$
 331   1      
 332   1      }
 333          
 334          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 335   1              // $[P1 - Port 1 Pin Latch]
 336   1              // [P1 - Port 1 Pin Latch]$
 337   1      
 338   1              // $[P1MDOUT - Port 1 Output Mode]
 339   1              /***********************************************************************
 340   1               - P1.0 output is push-pull
 341   1               - P1.1 output is push-pull
 342   1               - P1.2 output is open-drain
 343   1               - P1.3 output is open-drain
 344   1               - P1.4 output is open-drain
 345   1               - P1.5 output is open-drain
 346   1               - P1.6 output is open-drain
 347   1               - P1.7 output is open-drain
 348   1               ***********************************************************************/
 349   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 350   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 351   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 352   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 353   1              // [P1MDOUT - Port 1 Output Mode]$
 354   1      
 355   1              // $[P1MDIN - Port 1 Input Mode]
 356   1              // [P1MDIN - Port 1 Input Mode]$
 357   1      
 358   1              // $[P1SKIP - Port 1 Skip]
 359   1              /***********************************************************************
 360   1               - P1.0 pin is not skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 7   

 361   1               - P1.1 pin is skipped by the crossbar
 362   1               - P1.2 pin is skipped by the crossbar
 363   1               - P1.3 pin is skipped by the crossbar
 364   1               - P1.4 pin is skipped by the crossbar
 365   1               - P1.5 pin is skipped by the crossbar
 366   1               - P1.6 pin is skipped by the crossbar
 367   1               - P1.7 pin is skipped by the crossbar
 368   1               ***********************************************************************/
 369   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 370   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 371   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 372   1              // [P1SKIP - Port 1 Skip]$
 373   1      
 374   1              // $[P1MASK - Port 1 Mask]
 375   1              // [P1MASK - Port 1 Mask]$
 376   1      
 377   1              // $[P1MAT - Port 1 Match]
 378   1              // [P1MAT - Port 1 Match]$
 379   1      
 380   1      }
 381          
 382          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 383   1              // $[P2 - Port 2 Pin Latch]
 384   1              // [P2 - Port 2 Pin Latch]$
 385   1      
 386   1              // $[P2MDOUT - Port 2 Output Mode]
 387   1              /***********************************************************************
 388   1               - P2.0 output is open-drain
 389   1               - P2.1 output is open-drain
 390   1               - P2.2 output is open-drain
 391   1               - P2.3 output is open-drain
 392   1               - P2.4 output is open-drain
 393   1               - P2.5 output is open-drain
 394   1               - P2.6 output is push-pull
 395   1               ***********************************************************************/
 396   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 397   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 398   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 399   1                              | P2MDOUT_B6__PUSH_PULL;
 400   1              // [P2MDOUT - Port 2 Output Mode]$
 401   1      
 402   1              // $[P2MDIN - Port 2 Input Mode]
 403   1              // [P2MDIN - Port 2 Input Mode]$
 404   1      
 405   1              // $[P2SKIP - Port 2 Skip]
 406   1              // [P2SKIP - Port 2 Skip]$
 407   1      
 408   1              // $[P2MASK - Port 2 Mask]
 409   1              // [P2MASK - Port 2 Mask]$
 410   1      
 411   1              // $[P2MAT - Port 2 Match]
 412   1              // [P2MAT - Port 2 Match]$
 413   1      
 414   1      }
 415          
 416          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 417   1              // $[P3 - Port 3 Pin Latch]
 418   1              // [P3 - Port 3 Pin Latch]$
 419   1      
 420   1              // $[P3MDOUT - Port 3 Output Mode]
 421   1              /***********************************************************************
 422   1               - P3.0 output is open-drain
 423   1               - P3.1 output is open-drain
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 8   

 424   1               - P3.2 output is open-drain
 425   1               - P3.3 output is open-drain
 426   1               - P3.4 output is push-pull
 427   1               - P3.7 output is open-drain
 428   1               ***********************************************************************/
 429   1              SFRPAGE = 0x20;
 430   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 431   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 432   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 433   1              // [P3MDOUT - Port 3 Output Mode]$
 434   1      
 435   1              // $[P3MDIN - Port 3 Input Mode]
 436   1              // [P3MDIN - Port 3 Input Mode]$
 437   1      
 438   1      }
 439          
 440          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 441   1              // $[Timer Initialization]
 442   1              // Save Timer Configuration
 443   1              uint8_t TMR4CN0_TR4_save;
 444   1              SFRPAGE = 0x10;
 445   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 446   1              // Stop Timer
 447   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 448   1              // [Timer Initialization]$
 449   1      
 450   1              // $[TMR4CN1 - Timer 4 Control 1]
 451   1              // [TMR4CN1 - Timer 4 Control 1]$
 452   1      
 453   1              // $[TMR4CN0 - Timer 4 Control]
 454   1              // [TMR4CN0 - Timer 4 Control]$
 455   1      
 456   1              // $[TMR4H - Timer 4 High Byte]
 457   1              /***********************************************************************
 458   1               - Timer 4 High Byte = 0xFE
 459   1               ***********************************************************************/
 460   1              TMR4H = (0xFE << TMR4H_TMR4H__SHIFT);
 461   1              // [TMR4H - Timer 4 High Byte]$
 462   1      
 463   1              // $[TMR4L - Timer 4 Low Byte]
 464   1              /***********************************************************************
 465   1               - Timer 4 Low Byte = 0x68
 466   1               ***********************************************************************/
 467   1              TMR4L = (0x68 << TMR4L_TMR4L__SHIFT);
 468   1              // [TMR4L - Timer 4 Low Byte]$
 469   1      
 470   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 471   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 472   1      
 473   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 474   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 475   1      
 476   1              // $[TMR4CN0]
 477   1              /***********************************************************************
 478   1               - Start Timer 4 running
 479   1               ***********************************************************************/
 480   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 481   1              // [TMR4CN0]$
 482   1      
 483   1              // $[Timer Restoration]
 484   1              // Restore Timer Configuration
 485   1              TMR4CN0 |= TMR4CN0_TR4_save;
 486   1              // [Timer Restoration]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/17/2017 15:41:11 PAGE 9   

 487   1      
 488   1      }
 489          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    170    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
