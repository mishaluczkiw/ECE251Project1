C51 COMPILER V9.53.0.0   MAIN                                                              05/07/2017 13:56:09 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\UART-alpha\src\main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(
                    -3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\varou\SimplicityStudio\v4_workspace1\U
                    -ART-alpha\inc\graphics;C:\Users\varou\SimplicityStudio\v4_workspace1\UART-alpha\inc;C:\Users\varou\SimplicityStudio\v4_w
                    -orkspace1\UART-alpha\inc\config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/Silico
                    -nLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/
                    -developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/
                    -v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/comm
                    -on/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drive
                    -rs/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:
                    -/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\main.lst) COND PAGEWIDTH(12
                    -0) PAGELENGTH(65) OBJECT(.\src\main.OBJ)

line level    source

   1          
   2          #include "bsp.h"
   3          #include "pwr.h"
   4          
   5          #include "draw.h"
   6          #include "tick.h"
   7          #include "InitDevice.h"
   8          #include <stdio.h>
   9          #include <SI_EFM8BB3_Register_Enums.h>
  10          #include "retargetserial.h"
  11          
  12          
  13          //-----------------------------------------------------------------------------
  14          // Local Definitions
  15          //-----------------------------------------------------------------------------
  16          
  17          
  18          SI_SBIT(LEDG, SFR_P1, 4);
  19          SI_SBIT (BC_EN, SFR_P2, 2);            // Board Controller Enable
  20          #define BC_DISCONNECTED 0              // 0 = Board Controller disconnected
  21                                                 //     to EFM8 UART pins
  22          #define BC_CONNECTED    1              // 1 = Board Controller connected
  23          #define UART_BUFFERSIZE       20
  24          
  25          //-----------------------------------------------------------------------------
  26          // Global Variables
  27          //-----------------------------------------------------------------------------
  28          volatile uint8_t UART_Buffer[UART_BUFFERSIZE];
  29          volatile uint8_t UART_Buffer_Size = 0;
  30          volatile uint8_t UART_Input_First = 0;
  31          //volatile uint8_t UART_Output_First = 0;
  32          //volatile uint8_t TX_Ready =1;
  33          volatile uint8_t Byte = 0;
  34          
  35          SI_INTERRUPT (UART0_ISR, UART0_IRQn)
  36          {
  37   1              LEDG=1;
  38   1                 if (SCON0_RI == 1)
  39   1                 {
  40   2              /*      if( UART_Buffer_Size == 0)  {    // If new word is entered
  41   2                       UART_Input_First = 0;    }
  42   2      */
  43   2                    SCON0_RI = 0;                          // Clear interrupt flag
  44   2      
  45   2              //      Byte = SBUF0;                    // Read a character from UART
C51 COMPILER V9.53.0.0   MAIN                                                              05/07/2017 13:56:09 PAGE 2   

  46   2      
  47   2                    if (UART_Input_First < UART_BUFFERSIZE)
  48   2                    {
  49   3                       UART_Buffer[UART_Input_First] = SBUF0; // Store in array
  50   3      
  51   3      
  52   3                       UART_Input_First++;           // Update counter
  53   3                    }
  54   2                 }
  55   1      
  56   1      }
  57          
  58          SI_INTERRUPT_USING (TIMER4_ISR, TIMER4_IRQn, 1)
  59          {
  60   1      
  61   1              //TMR4CN0_TF4H = 0;
  62   1      
  63   1      
  64   1                  TMR4CN0_TF4H = 0;
  65   1                      //TMR4CN0 &= ~TMR3CN0_TF3H__BMASK;
  66   1      
  67   1      }
  68          volatile bool pressed=false;
  69          SI_INTERRUPT(PMATCH_ISR, PMATCH_IRQn)
  70          {
  71   1        uint8_t SFRPAGE_save = SFRPAGE;
  72   1                pressed=true;
  73   1      
  74   1      
  75   1      //  }
  76   1        //LEDG=0;
  77   1        SFRPAGE = PG2_PAGE;
  78   1      
  79   1        //EIE1 &= ~0x02;                     // Disable Port Match interrupts to
  80   1                                           // prevent multiple interrupts from
  81   1                                           // occurring while the button is
  82   1                                           // pressed
  83   1        SFRPAGE = SFRPAGE_save;
  84   1      }
  85          
  86          //-----------------------------------------------------------------------------
  87          // Example main()
  88          //-----------------------------------------------------------------------------
  89          
  90          
  91          
  92          void main(void)
  93          {
  94   1              //uint8_t Screen [3][20];
  95   1      
  96   1              uint8_t index = 5;
  97   1              uint8_t j = 0;
  98   1              //      uint8_t modeSelected = 1;
  99   1              enter_DefaultMode_from_RESET();
 100   1              // Enable all interrupts
 101   1              DISP_Init();
 102   1              BC_EN = 0;               // Board controller connected to EFM8
 103   1              LEDG=0;
 104   1              IE_EA = 1;
 105   1      
 106   1      
 107   1      
 108   1      
C51 COMPILER V9.53.0.0   MAIN                                                              05/07/2017 13:56:09 PAGE 3   

 109   1              while(true){
 110   2                      if (UART_Input_First == 19){
 111   3                              for (j = 0; j<20; j++){
 112   4                                UART_Buffer[j]='\0';
 113   4                              }
 114   3                              index +=10;
 115   3                              UART_Input_First =0;
 116   3      
 117   3                      }
 118   2      
 119   2      
 120   2                      DrawScreenText(UART_Buffer, index);
 121   2      
 122   2              }
 123   1      
 124   1      
 125   1      }
 126          
 127          
 128          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    139    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
