C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\Copy of EFM8BB3_FunctionGenerator\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE
                    -) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\varou\Sim
                    -plicityStudio\v4_workspace1\Copy of EFM8BB3_FunctionGenerator\inc\graphics;C:\Users\varou\SimplicityStudio\v4_workspace1
                    -\Copy of EFM8BB3_FunctionGenerator\inc;C:\Users\varou\SimplicityStudio\v4_workspace1\Copy of EFM8BB3_FunctionGenerator\i
                    -nc\config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio
                    -/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4
                    -.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/dr
                    -ivers/efm8_joystick;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/i
                    -nc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/Si
                    -liconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/
                    -SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sd
                    -ks/8051/v4.0.3//Device/EFM8BB3/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/ef
                    -m8_retargetserial) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          #include "function_generator.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PORTS_3_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              CLOCK_0_enter_DefaultMode_from_RESET();
  34   1              TIMER01_0_enter_DefaultMode_from_RESET();
  35   1              TIMER16_3_enter_DefaultMode_from_RESET();
  36   1              TIMER16_4_enter_DefaultMode_from_RESET();
  37   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  38   1              SPI_0_enter_DefaultMode_from_RESET();
  39   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  40   1              // Restore the SFRPAGE
  41   1              SFRPAGE = SFRPAGE_save;
  42   1              // [Config Calls]$
  43   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 2   

  44   1      }
  45          
  46          //================================================================================
  47          // WDT_0_enter_DefaultMode_from_RESET
  48          //================================================================================
  49          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  50   1              // $[WDTCN - Watchdog Timer Control]
  51   1              SFRPAGE = 0x00;
  52   1              //Disable Watchdog with key sequence
  53   1              WDTCN = 0xDE; //First key
  54   1              WDTCN = 0xAD; //Second key
  55   1              // [WDTCN - Watchdog Timer Control]$
  56   1      
  57   1      }
  58          
  59          //================================================================================
  60          // PORTS_0_enter_DefaultMode_from_RESET
  61          //================================================================================
  62          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  63   1              // $[P0 - Port 0 Pin Latch]
  64   1              // [P0 - Port 0 Pin Latch]$
  65   1      
  66   1              // $[P0MDOUT - Port 0 Output Mode]
  67   1              /***********************************************************************
  68   1               - P0.0 output is open-drain
  69   1               - P0.1 output is open-drain
  70   1               - P0.2 output is open-drain
  71   1               - P0.3 output is open-drain
  72   1               - P0.4 output is open-drain
  73   1               - P0.5 output is open-drain
  74   1               - P0.6 output is push-pull
  75   1               - P0.7 output is open-drain
  76   1               ***********************************************************************/
  77   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  78   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  79   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
  80   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  81   1              // [P0MDOUT - Port 0 Output Mode]$
  82   1      
  83   1              // $[P0MDIN - Port 0 Input Mode]
  84   1              /***********************************************************************
  85   1               - P0.0 pin is configured for analog mode
  86   1               - P0.1 pin is configured for digital mode
  87   1               - P0.2 pin is configured for digital mode
  88   1               - P0.3 pin is configured for digital mode
  89   1               - P0.4 pin is configured for digital mode
  90   1               - P0.5 pin is configured for digital mode
  91   1               - P0.6 pin is configured for digital mode
  92   1               - P0.7 pin is configured for digital mode
  93   1               ***********************************************************************/
  94   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
  95   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
  96   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
  97   1              // [P0MDIN - Port 0 Input Mode]$
  98   1      
  99   1              // $[P0SKIP - Port 0 Skip]
 100   1              /***********************************************************************
 101   1               - P0.0 pin is skipped by the crossbar
 102   1               - P0.1 pin is skipped by the crossbar
 103   1               - P0.2 pin is skipped by the crossbar
 104   1               - P0.3 pin is skipped by the crossbar
 105   1               - P0.4 pin is skipped by the crossbar
 106   1               - P0.5 pin is skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 3   

 107   1               - P0.6 pin is not skipped by the crossbar
 108   1               - P0.7 pin is not skipped by the crossbar
 109   1               ***********************************************************************/
 110   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 111   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 112   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 113   1              // [P0SKIP - Port 0 Skip]$
 114   1      
 115   1              // $[P0MASK - Port 0 Mask]
 116   1              /***********************************************************************
 117   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 118   1               event
 119   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 120   1               event
 121   1               - P0.2 pin logic value is compared to P0MAT.2
 122   1               - P0.3 pin logic value is compared to P0MAT.3
 123   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 124   1               event
 125   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 126   1               event
 127   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 128   1               event
 129   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 130   1               event
 131   1               ***********************************************************************/
 132   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 133   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 134   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 135   1              // [P0MASK - Port 0 Mask]$
 136   1      
 137   1              // $[P0MAT - Port 0 Match]
 138   1              // [P0MAT - Port 0 Match]$
 139   1      
 140   1      }
 141          
 142          //================================================================================
 143          // PORTS_1_enter_DefaultMode_from_RESET
 144          //================================================================================
 145          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 146   1              // $[P1 - Port 1 Pin Latch]
 147   1              // [P1 - Port 1 Pin Latch]$
 148   1      
 149   1              // $[P1MDOUT - Port 1 Output Mode]
 150   1              /***********************************************************************
 151   1               - P1.0 output is push-pull
 152   1               - P1.1 output is open-drain
 153   1               - P1.2 output is open-drain
 154   1               - P1.3 output is open-drain
 155   1               - P1.4 output is push-pull
 156   1               - P1.5 output is push-pull
 157   1               - P1.6 output is push-pull
 158   1               - P1.7 output is open-drain
 159   1               ***********************************************************************/
 160   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 161   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 162   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 163   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 164   1              // [P1MDOUT - Port 1 Output Mode]$
 165   1      
 166   1              // $[P1MDIN - Port 1 Input Mode]
 167   1              /***********************************************************************
 168   1               - P1.0 pin is configured for digital mode
 169   1               - P1.1 pin is configured for analog mode
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 4   

 170   1               - P1.2 pin is configured for digital mode
 171   1               - P1.3 pin is configured for digital mode
 172   1               - P1.4 pin is configured for digital mode
 173   1               - P1.5 pin is configured for digital mode
 174   1               - P1.6 pin is configured for digital mode
 175   1               - P1.7 pin is configured for analog mode
 176   1               ***********************************************************************/
 177   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 178   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 179   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 180   1              // [P1MDIN - Port 1 Input Mode]$
 181   1      
 182   1              // $[P1SKIP - Port 1 Skip]
 183   1              /***********************************************************************
 184   1               - P1.0 pin is not skipped by the crossbar
 185   1               - P1.1 pin is skipped by the crossbar
 186   1               - P1.2 pin is skipped by the crossbar
 187   1               - P1.3 pin is skipped by the crossbar
 188   1               - P1.4 pin is not skipped by the crossbar
 189   1               - P1.5 pin is not skipped by the crossbar
 190   1               - P1.6 pin is not skipped by the crossbar
 191   1               - P1.7 pin is skipped by the crossbar
 192   1               ***********************************************************************/
 193   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 194   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 195   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 196   1                              | P1SKIP_B7__SKIPPED;
 197   1              // [P1SKIP - Port 1 Skip]$
 198   1      
 199   1              // $[P1MASK - Port 1 Mask]
 200   1              // [P1MASK - Port 1 Mask]$
 201   1      
 202   1              // $[P1MAT - Port 1 Match]
 203   1              // [P1MAT - Port 1 Match]$
 204   1      
 205   1      }
 206          
 207          //================================================================================
 208          // PORTS_2_enter_DefaultMode_from_RESET
 209          //================================================================================
 210          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 211   1              // $[P2 - Port 2 Pin Latch]
 212   1              // [P2 - Port 2 Pin Latch]$
 213   1      
 214   1              // $[P2MDOUT - Port 2 Output Mode]
 215   1              /***********************************************************************
 216   1               - P2.0 output is open-drain
 217   1               - P2.1 output is open-drain
 218   1               - P2.2 output is open-drain
 219   1               - P2.3 output is open-drain
 220   1               - P2.4 output is open-drain
 221   1               - P2.5 output is open-drain
 222   1               - P2.6 output is push-pull
 223   1               ***********************************************************************/
 224   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 225   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 226   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 227   1                              | P2MDOUT_B6__PUSH_PULL;
 228   1              // [P2MDOUT - Port 2 Output Mode]$
 229   1      
 230   1              // $[P2MDIN - Port 2 Input Mode]
 231   1              // [P2MDIN - Port 2 Input Mode]$
 232   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 5   

 233   1              // $[P2SKIP - Port 2 Skip]
 234   1              /***********************************************************************
 235   1               - P2.0 pin is not skipped by the crossbar
 236   1               - P2.1 pin is not skipped by the crossbar
 237   1               - P2.2 pin is not skipped by the crossbar
 238   1               - P2.3 pin is skipped by the crossbar
 239   1               ***********************************************************************/
 240   1              SFRPAGE = 0x20;
 241   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 242   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 243   1              // [P2SKIP - Port 2 Skip]$
 244   1      
 245   1              // $[P2MASK - Port 2 Mask]
 246   1              // [P2MASK - Port 2 Mask]$
 247   1      
 248   1              // $[P2MAT - Port 2 Match]
 249   1              // [P2MAT - Port 2 Match]$
 250   1      
 251   1      }
 252          
 253          //================================================================================
 254          // PORTS_3_enter_DefaultMode_from_RESET
 255          //================================================================================
 256          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 257   1              // $[P3 - Port 3 Pin Latch]
 258   1              // [P3 - Port 3 Pin Latch]$
 259   1      
 260   1              // $[P3MDOUT - Port 3 Output Mode]
 261   1              // [P3MDOUT - Port 3 Output Mode]$
 262   1      
 263   1              // $[P3MDIN - Port 3 Input Mode]
 264   1              /***********************************************************************
 265   1               - P3.0 pin is configured for analog mode
 266   1               - P3.1 pin is configured for analog mode
 267   1               - P3.2 pin is configured for digital mode
 268   1               - P3.3 pin is configured for digital mode
 269   1               - P3.4 pin is configured for digital mode
 270   1               - P3.7 pin is configured for digital mode
 271   1               ***********************************************************************/
 272   1              P3MDIN = P3MDIN_B0__ANALOG | P3MDIN_B1__ANALOG | P3MDIN_B2__DIGITAL
 273   1                              | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B7__DIGITAL;
 274   1              // [P3MDIN - Port 3 Input Mode]$
 275   1      
 276   1      }
 277          
 278          //================================================================================
 279          // PBCFG_0_enter_DefaultMode_from_RESET
 280          //================================================================================
 281          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 282   1              // $[XBR2 - Port I/O Crossbar 2]
 283   1              /***********************************************************************
 284   1               - Weak Pullups enabled 
 285   1               - Crossbar enabled
 286   1               - UART1 I/O unavailable at Port pin
 287   1               - UART1 RTS1 unavailable at Port pin
 288   1               - UART1 CTS1 unavailable at Port pin
 289   1               ***********************************************************************/
 290   1              SFRPAGE = 0x00;
 291   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 292   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 293   1                              | XBR2_URT1CTSE__DISABLED;
 294   1              // [XBR2 - Port I/O Crossbar 2]$
 295   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 6   

 296   1              // $[PRTDRV - Port Drive Strength]
 297   1              // [PRTDRV - Port Drive Strength]$
 298   1      
 299   1              // $[XBR0 - Port I/O Crossbar 0]
 300   1              // [XBR0 - Port I/O Crossbar 0]$
 301   1      
 302   1              // $[XBR1 - Port I/O Crossbar 1]
 303   1              /***********************************************************************
 304   1               - CEX0, CEX1, CEX2 routed to Port pins
 305   1               - ECI unavailable at Port pin
 306   1               - T0 unavailable at Port pin
 307   1               - T1 unavailable at Port pin
 308   1               - T2 unavailable at Port pin
 309   1               ***********************************************************************/
 310   1              XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 311   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 312   1              // [XBR1 - Port I/O Crossbar 1]$
 313   1      
 314   1      }
 315          
 316          //================================================================================
 317          // ADC_0_enter_DefaultMode_from_RESET
 318          //================================================================================
 319          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 320   1              // $[ADC0CN2 - ADC0 Control 2]
 321   1              // [ADC0CN2 - ADC0 Control 2]$
 322   1      
 323   1              // $[ADC0CN1 - ADC0 Control 1]
 324   1              // [ADC0CN1 - ADC0 Control 1]$
 325   1      
 326   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 327   1              /***********************************************************************
 328   1               - Select ADC0.13
 329   1               ***********************************************************************/
 330   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 331   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 332   1      
 333   1              // $[ADC0CF2 - ADC0 Power Control]
 334   1              /***********************************************************************
 335   1               - The ADC0 ground reference is the GND pin
 336   1               - The ADC0 voltage reference is the VDD pin
 337   1               - Power Up Delay Time = 0x1F
 338   1               ***********************************************************************/
 339   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 340   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 341   1              // [ADC0CF2 - ADC0 Power Control]$
 342   1      
 343   1              // $[ADC0CF0 - ADC0 Configuration]
 344   1              /***********************************************************************
 345   1               - ADCCLK = SYSCLK
 346   1               - SAR Clock Divider = 0x01
 347   1               ***********************************************************************/
 348   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 349   1              // [ADC0CF0 - ADC0 Configuration]$
 350   1      
 351   1              // $[ADC0CF1 - ADC0 Configuration]
 352   1              /***********************************************************************
 353   1               - Enable low power mode
 354   1               - Conversion Tracking Time = 0x01
 355   1               ***********************************************************************/
 356   1              ADC0CF1 = ADC0CF1_ADLPM__LP_ENABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 357   1              // [ADC0CF1 - ADC0 Configuration]$
 358   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 7   

 359   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 360   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 361   1      
 362   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 363   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 364   1      
 365   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 366   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 367   1      
 368   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 369   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 370   1      
 371   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 372   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 373   1      
 374   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 375   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 376   1      
 377   1              // $[ADC0CN0 - ADC0 Control 0]
 378   1              /***********************************************************************
 379   1               - Enable ADC0 
 380   1               ***********************************************************************/
 381   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 382   1              // [ADC0CN0 - ADC0 Control 0]$
 383   1      
 384   1      }
 385          
 386          //================================================================================
 387          // DAC_0_enter_DefaultMode_from_RESET
 388          //================================================================================
 389          extern void DAC_0_enter_DefaultMode_from_RESET(void) {
 390   1              // $[DAC0CF0 - DAC0 Configuration 0]
 391   1              /***********************************************************************
 392   1               - DAC0 is enabled and will drive the output pin
 393   1               - DAC0 output updates occur on Timer 4 high byte overflow
 394   1               - DAC0 input is treated as right-justified
 395   1               - All resets will reset DAC0 and its associated registers
 396   1               ***********************************************************************/
 397   1              SFRPAGE = 0x30;
 398   1              DAC0CF0 = DAC0CF0_EN__ENABLE | DAC0CF0_UPDATE__TIMER4
 399   1                              | DAC0CF0_LJST__RIGHT_JUSTIFY | DAC0CF0_RSTMD__NORMAL;
 400   1              // [DAC0CF0 - DAC0 Configuration 0]$
 401   1      
 402   1              // $[DAC0CF1 - DAC0 Configuration 1]
 403   1              // [DAC0CF1 - DAC0 Configuration 1]$
 404   1      
 405   1      }
 406          
 407          //================================================================================
 408          // DAC_1_enter_DefaultMode_from_RESET
 409          //================================================================================
 410          extern void DAC_1_enter_DefaultMode_from_RESET(void) {
 411   1              // $[DAC1CF0 - DAC1 Configuration 0]
 412   1              /***********************************************************************
 413   1               - DAC1 is enabled and will drive the output pin
 414   1               - DAC1 output updates occur on Timer 4 high byte overflow
 415   1               - DAC1 input is treated as right-justified
 416   1               - All resets will reset DAC1 and its associated registers
 417   1               ***********************************************************************/
 418   1              DAC1CF0 = DAC1CF0_EN__ENABLE | DAC1CF0_UPDATE__TIMER4
 419   1                              | DAC1CF0_LJST__RIGHT_JUSTIFY | DAC1CF0_RSTMD__NORMAL;
 420   1              // [DAC1CF0 - DAC1 Configuration 0]$
 421   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 8   

 422   1              // $[DAC1CF1 - DAC1 Configuration 1]
 423   1              // [DAC1CF1 - DAC1 Configuration 1]$
 424   1      
 425   1      }
 426          
 427          //================================================================================
 428          // DACGCF_0_enter_DefaultMode_from_RESET
 429          //================================================================================
 430          extern void DACGCF_0_enter_DefaultMode_from_RESET(void) {
 431   1              // $[DACGCF0 - DAC Global Configuration 0]
 432   1              /***********************************************************************
 433   1               - Select the VREF pin
 434   1               - Select the VDD supply
 435   1               - Input = DAC1H:DAC1L
 436   1               - Input = DAC3H:DAC3L
 437   1               - DAC1 always updates from the data source selected in D1SRC
 438   1               - DAC3 always updates from the data source selected in D3SRC
 439   1               ***********************************************************************/
 440   1              DACGCF0 = DACGCF0_D01REFSL__VREF | DACGCF0_D23REFSL__VDD
 441   1                              | DACGCF0_D1SRC__DAC1 | DACGCF0_D3SRC__DAC3 | DACGCF0_D1AMEN__NORMAL
 442   1                              | DACGCF0_D3AMEN__NORMAL;
 443   1              // [DACGCF0 - DAC Global Configuration 0]$
 444   1      
 445   1              // $[DACGCF2 - DAC Global Configuration 2]
 446   1              // [DACGCF2 - DAC Global Configuration 2]$
 447   1      
 448   1      }
 449          
 450          //================================================================================
 451          // VREF_0_enter_DefaultMode_from_RESET
 452          //================================================================================
 453          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 454   1              // $[REF0CN - Voltage Reference Control]
 455   1              /***********************************************************************
 456   1               - 2.4 V reference output to VREF pin
 457   1               ***********************************************************************/
 458   1              SFRPAGE = 0x00;
 459   1              REF0CN = REF0CN_VREFSL__VREF_2P4;
 460   1              // [REF0CN - Voltage Reference Control]$
 461   1      
 462   1      }
 463          
 464          //================================================================================
 465          // CLOCK_0_enter_DefaultMode_from_RESET
 466          //================================================================================
 467          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 468   1              // $[HFOSC1 Setup]
 469   1              // [HFOSC1 Setup]$
 470   1      
 471   1              // $[CLKSEL - Clock Select]
 472   1              /***********************************************************************
 473   1               - Clock derived from the Internal High Frequency Oscillator 0
 474   1               - SYSCLK is equal to selected clock source divided by 1
 475   1               ***********************************************************************/
 476   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 477   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 478   1                      ;
 479   1              // [CLKSEL - Clock Select]$
 480   1      
 481   1      }
 482          
 483          //================================================================================
 484          // TIMER01_0_enter_DefaultMode_from_RESET
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 9   

 485          //================================================================================
 486          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 487   1              // $[Timer Initialization]
 488   1              //Save Timer Configuration
 489   1              uint8_t TCON_save;
 490   1              TCON_save = TCON;
 491   1              //Stop Timers
 492   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 493   1      
 494   1              // [Timer Initialization]$
 495   1      
 496   1              // $[TH0 - Timer 0 High Byte]
 497   1              // [TH0 - Timer 0 High Byte]$
 498   1      
 499   1              // $[TL0 - Timer 0 Low Byte]
 500   1              // [TL0 - Timer 0 Low Byte]$
 501   1      
 502   1              // $[TH1 - Timer 1 High Byte]
 503   1              // [TH1 - Timer 1 High Byte]$
 504   1      
 505   1              // $[TL1 - Timer 1 Low Byte]
 506   1              // [TL1 - Timer 1 Low Byte]$
 507   1      
 508   1              // $[Timer Restoration]
 509   1              //Restore Timer Configuration
 510   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 511   1      
 512   1              // [Timer Restoration]$
 513   1      
 514   1      }
 515          
 516          //================================================================================
 517          // TIMER16_3_enter_DefaultMode_from_RESET
 518          //================================================================================
 519          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 520   1              // $[Timer Initialization]
 521   1              // Save Timer Configuration
 522   1              uint8_t TMR3CN0_TR3_save;
 523   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 524   1              // Stop Timer
 525   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 526   1              // [Timer Initialization]$
 527   1      
 528   1              // $[TMR3CN1 - Timer 3 Control 1]
 529   1              // [TMR3CN1 - Timer 3 Control 1]$
 530   1      
 531   1              // $[TMR3CN0 - Timer 3 Control]
 532   1              // [TMR3CN0 - Timer 3 Control]$
 533   1      
 534   1              // $[TMR3H - Timer 3 High Byte]
 535   1              /***********************************************************************
 536   1               - Timer 3 High Byte = 0xF8
 537   1               ***********************************************************************/
 538   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 539   1              // [TMR3H - Timer 3 High Byte]$
 540   1      
 541   1              // $[TMR3L - Timer 3 Low Byte]
 542   1              /***********************************************************************
 543   1               - Timer 3 Low Byte = 0x06
 544   1               ***********************************************************************/
 545   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 546   1              // [TMR3L - Timer 3 Low Byte]$
 547   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 10  

 548   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 549   1              /***********************************************************************
 550   1               - Timer 3 Reload High Byte = 0xF8
 551   1               ***********************************************************************/
 552   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 553   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 554   1      
 555   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 556   1              /***********************************************************************
 557   1               - Timer 3 Reload Low Byte = 0x06
 558   1               ***********************************************************************/
 559   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 560   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 561   1      
 562   1              // $[TMR3CN0]
 563   1              /***********************************************************************
 564   1               - Start Timer 3 running
 565   1               ***********************************************************************/
 566   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 567   1              // [TMR3CN0]$
 568   1      
 569   1              // $[Timer Restoration]
 570   1              // Restore Timer Configuration
 571   1              TMR3CN0 |= TMR3CN0_TR3_save;
 572   1              // [Timer Restoration]$
 573   1      
 574   1      }
 575          
 576          //================================================================================
 577          // TIMER16_4_enter_DefaultMode_from_RESET
 578          //================================================================================
 579          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 580   1              // $[Timer Initialization]
 581   1              // Save Timer Configuration
 582   1              uint8_t TMR4CN0_TR4_save;
 583   1              SFRPAGE = 0x10;
 584   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 585   1              // Stop Timer
 586   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 587   1              // [Timer Initialization]$
 588   1      
 589   1              // $[TMR4CN1 - Timer 4 Control 1]
 590   1              /***********************************************************************
 591   1               - Capture high-to-low transitions on the T2 input pin
 592   1               - Timer will only reload on overflow events
 593   1               - Suspend Timer Synchronization Status = 0x00
 594   1               ***********************************************************************/
 595   1              TMR4CN1 = TMR4CN1_T4CSEL__PIN | TMR4CN1_RLFSEL__NONE
 596   1                              | (0x00 << TMR4CN1_STSYNC__SHIFT);
 597   1              // [TMR4CN1 - Timer 4 Control 1]$
 598   1      
 599   1              // $[TMR4CN0 - Timer 4 Control]
 600   1              // [TMR4CN0 - Timer 4 Control]$
 601   1      
 602   1              // $[TMR4H - Timer 4 High Byte]
 603   1              /***********************************************************************
 604   1               - Timer 4 High Byte = 0xFE
 605   1               ***********************************************************************/
 606   1              TMR4H = (0xFE << TMR4H_TMR4H__SHIFT);
 607   1              // [TMR4H - Timer 4 High Byte]$
 608   1      
 609   1              // $[TMR4L - Timer 4 Low Byte]
 610   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 11  

 611   1               - Timer 4 Low Byte = 0x68
 612   1               ***********************************************************************/
 613   1              TMR4L = (0x68 << TMR4L_TMR4L__SHIFT);
 614   1              // [TMR4L - Timer 4 Low Byte]$
 615   1      
 616   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 617   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 618   1      
 619   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 620   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 621   1      
 622   1              TMR4RL = (uint16_t)(-SYSCLK / SAMPLE_RATE_DAC);
 623   1              // $[TMR4CN0]
 624   1              /***********************************************************************
 625   1               - Start Timer 4 running
 626   1               ***********************************************************************/
 627   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 628   1              // [TMR4CN0]$
 629   1      
 630   1              // $[Timer Restoration]
 631   1              // Restore Timer Configuration
 632   1              TMR4CN0 |= TMR4CN0_TR4_save;
 633   1              // [Timer Restoration]$
 634   1      
 635   1      }
 636          
 637          //================================================================================
 638          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 639          //================================================================================
 640          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 641   1              // $[CKCON0 - Clock Control 0]
 642   1              /***********************************************************************
 643   1               - External oscillator divided by 8 
 644   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 645   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 646   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 647   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 648   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 649   1               - Timer 1 uses the clock defined by the prescale field, SCA
 650   1               ***********************************************************************/
 651   1              SFRPAGE = 0x00;
 652   1              CKCON0 = CKCON0_SCA__EXTOSC_DIV_8 | CKCON0_T0M__PRESCALE
 653   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 654   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 655   1                              | CKCON0_T1M__PRESCALE;
 656   1              // [CKCON0 - Clock Control 0]$
 657   1      
 658   1              // $[CKCON1 - Clock Control 1]
 659   1              // [CKCON1 - Clock Control 1]$
 660   1      
 661   1              // $[TMOD - Timer 0/1 Mode]
 662   1              /***********************************************************************
 663   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 664   1               - Mode 0, 13-bit Counter/Timer
 665   1               - Timer Mode
 666   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 667   1               - Timer Mode
 668   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 669   1               ***********************************************************************/
 670   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 671   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 672   1              // [TMOD - Timer 0/1 Mode]$
 673   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 12  

 674   1              // $[TCON - Timer 0/1 Control]
 675   1              /***********************************************************************
 676   1               - Start Timer 0 running
 677   1               ***********************************************************************/
 678   1              TCON |= TCON_TR0__RUN;
 679   1              // [TCON - Timer 0/1 Control]$
 680   1      
 681   1      }
 682          
 683          //================================================================================
 684          // SPI_0_enter_DefaultMode_from_RESET
 685          //================================================================================
 686          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 687   1              // $[SPI0CKR - SPI0 Clock Rate]
 688   1              /***********************************************************************
 689   1               - SPI0 Clock Rate = 0x0B
 690   1               ***********************************************************************/
 691   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 692   1              // [SPI0CKR - SPI0 Clock Rate]$
 693   1      
 694   1              // $[SPI0CFG - SPI0 Configuration]
 695   1              /***********************************************************************
 696   1               - Enable master mode. Operate as a master
 697   1               ***********************************************************************/
 698   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 699   1              // [SPI0CFG - SPI0 Configuration]$
 700   1      
 701   1              // $[SPI0PCF - SPI0 Pin Configuration]
 702   1              // [SPI0PCF - SPI0 Pin Configuration]$
 703   1      
 704   1              // $[SPI0CN0 - SPI0 Control]
 705   1              /***********************************************************************
 706   1               - Enable the SPI module
 707   1               - 3-Wire Slave or 3-Wire Master Mode
 708   1               ***********************************************************************/
 709   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 710   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 711   1              // [SPI0CN0 - SPI0 Control]$
 712   1      
 713   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 714   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 715   1      
 716   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 717   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 718   1      
 719   1      }
 720          
 721          //================================================================================
 722          // INTERRUPT_0_enter_DefaultMode_from_RESET
 723          //================================================================================
 724          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 725   1              // $[EIE1 - Extended Interrupt Enable 1]
 726   1              /***********************************************************************
 727   1               - Disable ADC0 Conversion Complete interrupt
 728   1               - Disable ADC0 Window Comparison interrupt
 729   1               - Disable CP0 interrupts
 730   1               - Disable CP1 interrupts
 731   1               - Enable interrupt requests generated by a Port Match
 732   1               - Disable all PCA0 interrupts
 733   1               - Disable all SMB0 interrupts
 734   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 735   1               ***********************************************************************/
 736   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 13  

 737   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 738   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 739   1              // [EIE1 - Extended Interrupt Enable 1]$
 740   1      
 741   1              // $[EIE2 - Extended Interrupt Enable 2]
 742   1              /***********************************************************************
 743   1               - Disable CL0 interrupts
 744   1               - Disable all I2C0 slave interrupts
 745   1               - Enable interrupt requests generated by the TF4L or TF4H flags
 746   1               - Disable Timer 5 interrupts
 747   1               - Disable UART1 interrupts
 748   1               ***********************************************************************/
 749   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__DISABLED | EIE2_ET4__ENABLED
 750   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 751   1              // [EIE2 - Extended Interrupt Enable 2]$
 752   1      
 753   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 754   1              /***********************************************************************
 755   1               - ADC0 Conversion Complete interrupt priority MSB set to low
 756   1               - ADC0 Window interrupt priority MSB set to low
 757   1               - CP0 interrupt priority MSB set to low
 758   1               - CP1 interrupt priority MSB set to low
 759   1               - Port Match interrupt priority MSB set to high
 760   1               - PCA0 interrupt priority MSB set to low
 761   1               - SMB0 interrupt priority MSB set to low
 762   1               - Timer 3 interrupt priority MSB set to high
 763   1               ***********************************************************************/
 764   1              SFRPAGE = 0x10;
 765   1              EIP1H = EIP1H_PHADC0__LOW | EIP1H_PHWADC0__LOW | EIP1H_PHCP0__LOW
 766   1                              | EIP1H_PHCP1__LOW | EIP1H_PHMAT__HIGH | EIP1H_PHPCA0__LOW
 767   1                              | EIP1H_PHSMB0__LOW | EIP1H_PHT3__HIGH;
 768   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 769   1      
 770   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 771   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 772   1      
 773   1              // $[EIP2 - Extended Interrupt Priority 2]
 774   1              // [EIP2 - Extended Interrupt Priority 2]$
 775   1      
 776   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 777   1              /***********************************************************************
 778   1               - CL0 interrupt priority MSB set to low
 779   1               - I2C0 Slave interrupt priority MSB set to low
 780   1               - Timer 4 interrupt priority MSB set to high
 781   1               - Timer 5 interrupt priority MSB set to low
 782   1               - UART1 interrupt priority MSB set to low
 783   1               ***********************************************************************/
 784   1              EIP2H = EIP2H_PHCL0__LOW | EIP2H_PHI2C0__LOW | EIP2H_PHT4__HIGH
 785   1                              | EIP2H_PHT5__LOW | EIP2H_PHS1__LOW;
 786   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 787   1      
 788   1              // $[IE - Interrupt Enable]
 789   1              /***********************************************************************
 790   1               - Enable each interrupt according to its individual mask setting
 791   1               - Disable external interrupt 0
 792   1               - Disable external interrupt 1
 793   1               - Enable interrupt requests generated by SPI0
 794   1               - Disable all Timer 0 interrupt
 795   1               - Disable all Timer 1 interrupt
 796   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 797   1               - Disable UART0 interrupt
 798   1               ***********************************************************************/
 799   1              SFRPAGE = 0x00;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 18:59:31 PAGE 14  

 800   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 801   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 802   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 803   1              // [IE - Interrupt Enable]$
 804   1      
 805   1              // $[IP - Interrupt Priority]
 806   1              // [IP - Interrupt Priority]$
 807   1      
 808   1              // $[IPH - Interrupt Priority High]
 809   1              // [IPH - Interrupt Priority High]$
 810   1      
 811   1      }
 812          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    270    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
