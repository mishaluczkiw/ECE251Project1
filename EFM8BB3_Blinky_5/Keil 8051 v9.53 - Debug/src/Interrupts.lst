C51 COMPILER V9.53.0.0   INTERRUPTS                                                        03/26/2017 16:45:08 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\EFM8BB3_Blinky_4\src\Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2)
                    - FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\varou\SimplicityStudio\v4_
                    -workspace1\EFM8BB3_Blinky_4\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;
                    -C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\Interrupts.lst) COND PAGE
                    -WIDTH(120) PAGELENGTH(65) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interrupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9                   
  10          // USER INCLUDES                        
  11          /*
  12          #include <SI_EFM8BB3_Register_Enums.h>
  13          
  14          //-----------------------------------------------------------------------------
  15          // Global VARIABLES
  16          //-----------------------------------------------------------------------------
  17          int CLKCOUNT = 0;
  18          //-----------------------------------------------------------------------------
  19          // Global CONSTANTS
  20          //-----------------------------------------------------------------------------
  21          SI_SBIT(CLK, SFR_P1, 1);
  22          SI_SBIT(BIT0, SFR_P1, 2);                  // P1.4 LED0
  23          SI_SBIT(BIT1, SFR_P1, 3);
  24          SI_SBIT(BIT2, SFR_P1, 4);                  // P1.4 LED0
  25          SI_SBIT(BIT3, SFR_P1, 5);                  // P1.5 LED1
  26          SI_SBIT(BIT4, SFR_P1, 6);                                       // P1.6 LED2
  27          SI_SBIT(BIT5, SFR_P1, 7);
  28          
  29          //-----------------------------------------------------------------------------
  30          // TIMER2_ISR
  31          //-----------------------------------------------------------------------------
  32          //
  33          // TIMER2 ISR Content goes here. Remember to clear flag bits:
  34          // TMR2CN::TF2H (Timer # High Byte Overflow Flag)
  35          // TMR2CN::TF2L (Timer # Low Byte Overflow Flag)
  36          //
  37          // This routine changes the state of the LED whenever Timer2 overflows.
  38          //
  39          //-----------------------------------------------------------------------------
  40          SI_INTERRUPT (TIMER2_ISR, TIMER2_IRQn)
  41          {
  42                  TMR2CN0_TF2H = 0;    // Clear Timer2 interrupt flag
  43                  uint8_t n=0;
  44          
  45                  switch (CLKCOUNT)
  46                  {
  47                          case 0:
  48          
  49                                  BIT0=outb[0];
  50                                  BIT1=outb[1];
  51                                  BIT2=outb[2];
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        03/26/2017 16:45:08 PAGE 2   

  52                                  BIT3=outb[3];
  53                                  BIT4=outb[4];
  54                                  BIT5=outb[5];
  55                                  /*for(n=0; n<=1000; n++){
  56                                          Nop();
  57                                  }
  58                                  CLK=1;
  59                             break;
  60                          case 1:
  61                             CLK=1;
  62                             break;
  63                          case 2:
  64                             CLK=0;
  65                             IE_EA=0;
  66                             break;
  67          
  68                  }
  69                  if (CLKCOUNT <= 1) CLKCOUNT++;
  70                  else CLKCOUNT = 0;
  71          }
  72          
  73          */
  74          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
