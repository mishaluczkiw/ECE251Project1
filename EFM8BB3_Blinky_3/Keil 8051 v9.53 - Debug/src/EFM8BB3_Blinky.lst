C51 COMPILER V9.53.0.0   EFM8BB3_BLINKY                                                    03/24/2017 19:11:26 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE EFM8BB3_BLINKY
OBJECT MODULE PLACED IN .\src\EFM8BB3_Blinky.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\varou\S
                    -implicityStudio\v4_workspace1\EFM8BB3_Blinky_3\src\EFM8BB3_Blinky.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVE
                    -L(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\varou\SimplicityStudio
                    -\v4_workspace1\EFM8BB3_Blinky_3\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051b
                    -ase;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\EFM8BB3_Blinky.lst) C
                    -OND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\EFM8BB3_Blinky.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // EFM8BB3_Blinky.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2014 Silicon Laboratories, Inc.
   5          // http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   6          //
   7          // Program Description:
   8          //
   9          // This program flashes the red/green/blue LED on the EFM8BB3 STK board about
  10          // five times a second using the interrupt handler for Timer2.
  11          //
  12          // Resources:
  13          //   SYSCLK - 24.5 MHz HFOSC0 / 8
  14          //   Timer2 - 5 Hz interrupt
  15          //   P1.4   - LED green
  16          //   P1.5   - LED blue
  17          //   P1.6   - LED red
  18          //   P3.4   - Display enable
  19          //
  20          //-----------------------------------------------------------------------------
  21          // How To Test: EFM8BB3 STK
  22          //-----------------------------------------------------------------------------
  23          // 1) Place the switch in "AEM" mode.
  24          // 2) Connect the EFM8BB3 STK board to a PC using a mini USB cable.
  25          // 3) Compile and download code to the EFM8BB3 STK board.
  26          //    In Simplicity Studio IDE, select Run -> Debug from the menu bar,
  27          //    click the Debug button in the quick menu, or press F11.
  28          // 4) Run the code.
  29          //    In Simplicity Studio IDE, select Run -> Resume from the menu bar,
  30          //    click the Resume button in the quick menu, or press F8.
  31          // 5) The RGB LED should alternate colors at approximately 5 Hz.
  32          //
  33          // Target:         EFM8BB3
  34          // Tool chain:     Generic
  35          //
  36          // Release 0.1 (ST)
  37          //    - Initial Revision
  38          //    - 20 MAY 2015
  39          //
  40          
  41          //-----------------------------------------------------------------------------
  42          // Includes
  43          //-----------------------------------------------------------------------------
  44          #include <SI_EFM8BB3_Register_Enums.h>
  45          #include <InitDevice.h>
  46          #include "bsp.h"
  47          #include "bsp_config.h"
  48          
  49          //-----------------------------------------------------------------------------
  50          // Pin Definitions
  51          //-----------------------------------------------------------------------------
C51 COMPILER V9.53.0.0   EFM8BB3_BLINKY                                                    03/24/2017 19:11:26 PAGE 2   

  52          SI_SBIT (DISP_EN, SFR_P3, 4);          // Display Enable
  53          #define DISP_BC_DRIVEN   0             // 0 = Board Controller drives display
  54          #define DISP_EFM8_DRIVEN 1             // 1 = EFM8 drives display
  55          
  56          SI_SBIT(LED0, SFR_P1, 4);                  // P1.4 LED0
  57          SI_SBIT(LED1, SFR_P1, 5);                  // P1.5 LED1
  58          SI_SBIT(LED2, SFR_P1, 6);
  59          
  60          
  61          extern void choose(int B);
  62          void square(void);
  63          void out(void);
  64          bool pressed=false;
  65          int C=5;
  66          //-----------------------------------------------------------------------------
  67          // Main Routine
  68          //-----------------------------------------------------------------------------
  69          void main (void)
  70          {
  71   1         enter_DefaultMode_from_RESET();
  72   1      
  73   1         DISP_EN = DISP_BC_DRIVEN; // Display not driven by EFM8
  74   1         IE_EA = 0;
  75   1         //out();
  76   1         while(1){
  77   2              //      LED0=1;
  78   2              //      LED1=0;
  79   2              //      LED2=0;
  80   2                      choose(C);
  81   2      
  82   2                 DISP_EN = DISP_BC_DRIVEN;           // EFM8 does not drive display
  83   2                 while(1){
  84   3                         if ((BSP_PB0 == BSP_PB_PRESSED)==false && (BSP_PB1 == BSP_PB_PRESSED)==false ){
  85   4                                 pressed=false;
  86   4                         }
  87   3      
  88   3      
  89   3                         if (BSP_PB0 == BSP_PB_PRESSED && !pressed ){
  90   4                                      pressed=true;
  91   4                                      C++;
  92   4                      //              LED0=0;
  93   4                      //              LED1=0;
  94   4                      //              LED2=0;
  95   4                                      if(C>5){
  96   5                                              C=0;
  97   5                                      }
  98   4                         break;
  99   4                         }
 100   3                         if (BSP_PB1 == BSP_PB_PRESSED && !pressed ){
 101   4                                 pressed=true;
 102   4                                 C--;
 103   4                      //         LED0=0;
 104   4                      //         LED1=0;
 105   4                      //         LED2=0;
 106   4                                 if(C<0){
 107   5                                         C=5;
 108   5                                 }
 109   4                                 break;
 110   4      
 111   4                         }
 112   3      
 113   3                 }
 114   2      
C51 COMPILER V9.53.0.0   EFM8BB3_BLINKY                                                    03/24/2017 19:11:26 PAGE 3   

 115   2      
 116   2                 square();
 117   2                 square();
 118   2      
 119   2      
 120   2              }
 121   1      
 122   1      
 123   1      }
 124          
 125          extern void choose(int B){
 126   1              switch(B){
 127   2              case 0:
 128   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 129   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 130   2                      break;
 131   2              case 1:
 132   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_2;
 133   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_2;
 134   2                      break;
 135   2              case 2:
 136   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_4;
 137   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_4;
 138   2                      break;
 139   2              case 3:
 140   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_8;
 141   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_8;
 142   2                      break;
 143   2              case 4:
 144   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_16;
 145   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_16;
 146   2                      break;
 147   2              case 5:
 148   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_32;
 149   2                      CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_32;
 150   2                      break;
 151   2              }
 152   1      
 153   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 154   1                      ;
 155   1      }
 156          
 157          
 158          void square(void){
 159   1              IE_EA=1;
 160   1              while(1){
 161   2                      if(IE_EA==0){
 162   3                              break;
 163   3                      }
 164   2              }
 165   1      }
 166          
 167          void out(void){
 168   1              int LEDCOUNT=0;
 169   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_64;
 170   1              /*while(1){
 171   1                      if (LEDCOUNT<40){
 172   1                              LED0=1;
 173   1                      }
 174   1                      else if(LEDCOUNT==80){
 175   1                              LEDCOUNT=0;
 176   1                      }
 177   1                      else {
C51 COMPILER V9.53.0.0   EFM8BB3_BLINKY                                                    03/24/2017 19:11:26 PAGE 4   

 178   1                              LED0=0;
 179   1                      }
 180   1                      LEDCOUNT++;
 181   1              }
 182   1              */
 183   1      
 184   1                      switch (LEDCOUNT)
 185   1                                      {
 186   2                                              case 0:
 187   2                                                 LED0 = 1;
 188   2                                                 LED1 = 0;
 189   2                                                 LED2 = 0;
 190   2                                                 break;
 191   2                                              case 1:
 192   2                                                 LED0 = 1;
 193   2                                                 LED1 = 1;
 194   2                                                 LED2 = 0;
 195   2                                                 IE_EA=0;
 196   2                                                 break;
 197   2                                              case 2:
 198   2                                                 LED0 = 1;
 199   2                                                 LED1 = 0;
 200   2                                                 LED2 = 1;
 201   2                                                break;
 202   2                                              case 3:
 203   2                                                 LED0 = 0;
 204   2                                                 LED1 = 1;
 205   2                                                 LED2 = 0;
 206   2                                                 break;
 207   2                                              case 4:
 208   2                                                 LED0 = 0;
 209   2                                                 LED1 = 1;
 210   2                                                 LED2 = 1;
 211   2                                                 break;
 212   2                                              case 5:
 213   2                                                 LED0 = 0;
 214   2                                                 LED1 = 0;
 215   2                                                 LED2 = 1;
 216   2                                                 break;
 217   2                                              case 6:
 218   2                                                 LED0 = 0;
 219   2                                                 LED1 = 1;
 220   2                                                 LED2 = 1;
 221   2                                                 break;
 222   2                                      }
 223   1      
 224   1                                      if (LEDCOUNT <= 5) LEDCOUNT++;
 225   1                                      else LEDCOUNT = 0;
 226   1              }
 227          
 228          
 229          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   EFM8BB3_BLINKY                                                    03/24/2017 19:11:26 PAGE 5   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
